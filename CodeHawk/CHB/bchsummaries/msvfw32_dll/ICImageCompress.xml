<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="08/18/2015 13:23:38"/>
  <libfun lib="msvfw32" name="ICImageCompress">
   <documentation>
    <desc>
      compresses an image to a given size. This function does not require 
      initialization functions
    </desc>
    <apidoc>
     <pt>
      <ll>HANDLE ICImageCompress(</ll>
      <ld>HIC          hic</ld>
      <ld>UINT         uiFlags</ld>
      <ld>LPBITMAPINFO lpbiIn</ld>
      <ld>LPVOID       lpBits</ld>
      <ld>LPBITMAPINFO lpbiOut</ld>
      <ld>LONG         lQuality</ld>
      <ld>LONG         *plSize</ld>
      <ll>)</ll>
     </pt>
     <par name="hic">
       Handle to a compressor opened with the ICOpen function. Specify NULL to have
       VCM select an appropriate compressor for the compression format. An application
       can have the user select the compressor by using the ICCompressorChoose function,
       which opens the selected compressor and returns a handle of the compressor in 
       this parameter
     </par>
     <par name="uiFlags">Reserved; must be zero</par>
     <par name="lpbiIn">
       Pointer to the BITMAPINFO structure containing the input data format
     </par>
     <par name="lpBits">
       Pointer to input data bits to compress. The data bits exclude header and 
       format information
     </par>
     <par name="lpbiOut">
       Pointer to the BITMAPINFO structure containing the compressed output format. 
       Specify NULL to have the compressor use an appropriate format
     </par>
     <par name="lQuality">
       Quality value used by the compressor. Values range from 0 to 10,000
     </par>
     <par name="plSize">
       Maximum size desired for the compressed image. The compressor might not be
       able to compress the data to fit within this size. When the function returns, 
       this parameter points to the size of the compressed image. Image sizes are 
       specified in bytes
     </par>
     <return>
      <rc cond="success">
	handle to a compressed DIB. The image data follows the format header
      </rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="28" cc="stdcall" name="ICImageCompress">
    <par loc="stack" io="r" name="hic" nr="1">
     <type>HIC</type>
     <roles>
      <role rt="ioc:process" rn="handle:image compressor" />
     </roles>
     <pre><deref-read/></pre>
    </par>
    <par loc="stack" io="r" name="uiFlags" roles="none" nr="2">
     <type>UINT</type>
    </par>
    <par loc="stack" io="r" name="lpbiIn" nr="3" rep="hex">
     <type><ptr>BITMAPINFO</ptr></type>
     <roles>
      <role rt="ioc:memops" rn="src-struct:BITMAPINFO" />
     </roles>
     <pre><deref-read/></pre>
    </par>
    <par loc="stack" io="r" name="lpBits" nr="4">
     <type><ptr>byte</ptr></type>
     <roles>
      <role rt="ioc:memops" rn="src-bytes:compression input buffer" />
     </roles>
    </par>
    <par loc="stack" io="r" name="lpbiOut" nr="5" rep="hex" >
     <type><ptr>BITMAPINFO</ptr></type>
     <roles>
      <role rt="ioc:memops" rn="src-struct:BITMAPINFO" />
     </roles>
     <pre><deref-read-null/></pre>
    </par>
    <par loc="stack" name="lQuality" io="r" roles="none" nr="6">
     <type>LONG</type>
    </par>
    <par loc="stack" name="plSize" io="r" roles="none" nr="7">
     <type><ptr>LONG</ptr></type>
    </par>
    <returntype>HANDLE</returntype>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="process" desc="compresses an image"/>
    </io-actions>
    <preconditions/>
    <postconditions/>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2017, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
