<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <header date="2020-04-28 11:12:18"/>
  <libfun lib="so_functions" name="execve">
    <documentation>
      <desc>execute a file</desc>
      <apidoc>
        <pt>
          <ll>int execve(</ll>
          <ld>const char *path</ld>
          <ld>char *const argv[]</ld>
          <ld>char *const envp[]</ld>
          <ll>)</ll>
        </pt>
        <par name="path">
	  points to a pathname that identifies the new process image file
	</par>
        <par name="argv">
	  an array of character pointers to null-terminated
	  strings. The application shall ensure that the last member
	  of this array is a null pointer. These strings shall
	  constitute the argument list available to the new process
	  image. The value in argv[0] should point to a filename
	  string that is associated with the process being started
	</par>
        <par name="envp">
	  an array of character pointers to null-terminated
	  strings. These strings shall constitute the environment for
	  the new process image. The envp array is terminated by a
	  null pointer.
	</par>
        <return>
          <rc cond="success">none</rc>
          <rc cond="failure">-1</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="0" cc="cdecl" name="execve">
      <par loc="stack" name="path" nr="1">
        <type><ptr>char</ptr></type>
	<pre><deref-read/></pre>
      </par>
      <par loc="stack" name="argv" nr="2">
        <type><ptr><ptr>char</ptr></ptr></type>
	<pre><deref-read/></pre>
      </par>
      <par loc="stack" name="envp" nr="3">
        <type><ptr><ptr>char</ptr></ptr></type>
	<pre><deref-read/></pre>
      </par>
      <returntype>int</returntype>
    </api>
    <semantics>
      <io-actions/>
      <preconditions/>
      <postconditions/>
      <sideeffects/>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
