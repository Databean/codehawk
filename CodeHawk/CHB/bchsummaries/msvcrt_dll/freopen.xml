<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="11/18/2015 10:24:17"/>
  <libfun lib="msvcrt" name="freopen">
   <documentation>
    <desc>Reassigns a file pointer</desc>
    <apidoc>
     <pt>
      <ll>FILE *freopen(</ll>
      <ld>const char *path</ld>
      <ld>const char *mode</ld>
      <ld>FILE *stream</ld>
      <ll>)</ll>
     </pt>
     <par name="path">Path of new file</par>
     <par name="mode">Type of access permitted</par>
     <par name="stream">Pointer to FILE structure</par>
     <return>
       returns a pointer to the newly opened file. If an error occurs, the original
       file is closed and the function returns a NULL pointer value. If path, mode,
       or stream is a null pointer, or if filename is an empty string, these functions
       invoke the invalid parameter handler, as described in Parameter Validation.
       If execution is allowed to continue, these functions set errno to EINVAL 
       and return NULL.
     </return>
    </apidoc>
   </documentation>
   <api adj="0" cc="cdecl" name="freopen">
    <par loc="stack" io="r" name="path" rep="hex" nr="1">
     <type><ptr>char</ptr></type>
     <pre><deref-read-nt/></pre>
     <roles>
        <role rt="ioc:filesystem" rn="name:file"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="mode" rep="hex" roles="none" nr="2">
      <type><ptr>char</ptr></type>
      <pre><deref-read-nt/></pre>
    </par>
    <par loc="stack" io="r" name="stream" rep="hex" nr="3">
     <type><ptr>FILE</ptr></type>
     <pre><deref-read/></pre>
     <roles>
        <role rt="ioc:filesystem" rn="file"/>
     </roles>
    </par>
    <returntype><ptr>FILE</ptr></returntype>
   </api>
   <semantics>
    <io-actions>
     <io-action cat="filesystem" desc="reassigns a file pointer"/>
    </io-actions>
    <preconditions/>
    <postconditions>
      <notnull-null/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2015, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
