<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:39:54"/>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <libfun lib="msvcrt" name="strncpy">
   <documentation>
    <desc>copies not more than count bytes from the string pointed to by src to
	the string pointed to by dest. If the string pointed to by src is
	shorter than count bytes, null bytes are appended to the copy unit count
	bytes are written
      </desc>
    <apidoc>
     <pt>
      <ll>char *strncpy (</ll>
      <ld>char *dest,</ld>
      <ld>const char *src,</ld>
      <ld>size_t count</ld>
      <ll>)</ll>
     </pt>
     <par name="dest">pointer to destination string</par>
     <par name="src">pointer to source string</par>
     <par name="count">number of bytes to be written</par>
     <return>value of dest</return>
    </apidoc>
   </documentation>
   <api adj="0" cc="cdecl" name="strncpy">
    <returntype><ptr>char</ptr></returntype>
    <par loc="stack" name="dest" io="w" nr="1" rep="hex">
      <type><ptr>char</ptr></type>
      <roles>
	<role rt="ioc:memops" rn="dst-string:copy"/>
     </roles>
    </par>
    <par loc="stack" name="src" io="r" nr="2" rep="hex">
      <type><ptr>char</ptr></type>
      <roles>
	<role rt="ioc:memops" rn="src-string:copy"/>
      </roles>
    </par>
    <par loc="stack" desc="count" io="r" name="count" roles="none" nr="3">
      <type>size_t</type>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="memops" desc="copies a string"/>
     </io-actions>       
    <preconditions>
     <pre>
      <math>
       <apply>
        <deref-read/>
	<type>char</type>
        <ci>src</ci>
	<ci>count</ci>
       </apply>
      </math>
     </pre>
     <pre>
       <math>
	 <apply>
	   <deref-write/>
	   <type>char</type>
	   <ci>dest</ci>
	   <ci>count</ci>
	 </apply>
       </math>
     </pre>
    </preconditions>
    <postconditions>
     <post>
      <math>
       <apply>
        <eq/>
        <return-value/>
        <ci>dest</ci>
       </apply>
      </math>
     </post>
    </postconditions>
    <sideeffects>
     <sideeffect>
      <math>
       <apply>
        <block-write/>
	<type>char</type>
        <ci>dest</ci>
        <ci>count</ci>
       </apply>
      </math>
     </sideeffect>
    </sideeffects>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
