<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <header info="libfun" name="_mbsnbcpy.xml" time="2016-05-07 19:03:30.259477"/>
  <reference href="http://msdn.microsoft.com"/>
  <libfun lib="msvcrt" name="_mbsnbcpy">
    <documentation>
      <desc>Copies n bytes of a string to a destination string</desc>
      <apidoc>
        <pt>
          <ll>unsigned char * _mbsnbcpy(</ll>
          <ld>unsigned char *strDest</ld>
          <ld>const unsigned char *strSource</ld>
          <ld>size_t count</ld>
          <ll>)</ll>
        </pt>
        <par name="strDest">
	  Destination for the character string to be copied
	</par>
        <par name="strSource">
	  Character string to be copied
	</par>
        <par name="count">
	  Number of bytes to be copied
	</par>
        <return>a pointer to the destination character string</return>
      </apidoc>
    </documentation>
    <api adj="12" cc="stdcall" name="_mbsnbcpy">
      <par loc="stack" io="w" name="strDest" rep="hex" nr="1">
        <type><ptr>char</ptr></type>
	<roles>
	  <role rt="ioc:memops" rn="dst-bytes:copy"/>
	</roles>
      </par>
      <par loc="stack" name="strSource" rep="hex" io="r" nr="2">
        <type><ptr>char</ptr></type>
	<roles>
	  <role rt="ioc:memops" rn="src-bytes:copy"/>
	</roles>
      </par>
      <par loc="stack" name="count" roles="none" nr="3">
        <type>size_t</type>
      </par>
      <returntype><ptr>char</ptr></returntype>
    </api>
    <semantics>
      <io-actions>
        <io-action cat="memops" desc="copies a string"/>
      </io-actions>
      <preconditions>
	<pre>
	  <math>
	    <apply>
	      <deref-read/>
	      <type>char</type>
	      <ci>strSource</ci>
	      <ci>count</ci>
	    </apply>
	  </math>
	</pre>
	<pre>
	  <math>
	    <apply>
	      <deref-write/>
	      <type>char</type>
	      <ci>strDest</ci>
	      <ci>count</ci>
	    </apply>
	  </math>
	</pre>
      </preconditions>
      <postconditions>
	<post>
	  <math>
	    <apply>
	      <eq/>
	      <return/>
	      <ci>strDest</ci>
	    </apply>
	  </math>
	</post>
      </postconditions>
      <sideeffects>
	<sideeffect>
	  <math>
	    <apply>
	      <block-write/>
	      <type>char</type>
	      <ci>strDest</ci>
	      <ci>count</ci>
	    </apply>
	  </math>
	</sideeffect>
      </sideeffects>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
