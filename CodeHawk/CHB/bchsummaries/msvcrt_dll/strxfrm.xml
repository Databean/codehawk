<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:39:54"/>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <libfun lib="msvcrt" name="strxfrm">
   <documentation>
    <desc>
      transforms the string pointed to by src and places it into the array 
      pointed to by dst
    </desc>
    <apidoc>
     <pt>
      <ll>size_t strxfrm (</ll>
      <ld>char *dst,</ld>
      <ld>const char *src,</ld>
      <ld>size_t count</ld>
      <ll>)</ll>
     </pt>
     <return>
       length of the transformed string, not including the terminating null byte.
       If the return value is greater than or equal to count, the content of 
       strDest is unpredictable.
     </return>
    </apidoc>
   </documentation>
   <api adj="0" cc="cdecl" name="strxfrm">
     <returntype>size_t</returntype>
     <par loc="stack" name="dst" io="r" rep="hex" nr="1">
       <type><ptr>char</ptr></type>
       <roles>
	 <role rt="ioc:memops" rn="dst-string:convert"/>
       </roles>
    </par>
    <par loc="stack" name="src" io="r" rep="hex" nr="2">
      <type><ptr>char</ptr></type>
      <pre><deref-read-nt/></pre>
      <roles>
	<role rt="ioc:memops" rn="src-string:convert"/>
      </roles>
    </par>
    <par loc="stack" name="count" roles="none" nr="3">
      <type>size_t</type>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="memops" desc="transforms a string"/>
     </io-actions>
    <preconditions>
     <pre>
      <math>
       <apply>
	 <deref-write/>
	 <type>char</type>
	 <ci>dst</ci>
	 <apply><plus/><ci>count</ci><cn>1</cn></apply>
       </apply>
      </math>
     </pre>
    </preconditions>
    <postconditions>
     <post>
      <math>
       <apply>
        <geq/>
        <return-value/>
        <cn>0</cn>
       </apply>
      </math>
     </post>
    </postconditions>
    <sideeffects>
     <sideeffect>
      <math>
       <apply>
        <block-write/>
        <btype tname="char" ttag="tnamed"/>
        <ci>dst</ci>
        <ci>count</ci>
       </apply>
      </math>
     </sideeffect>
     <sideeffect>
      <math>
       <sets-errno/>
      </math>
     </sideeffect>
    </sideeffects>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
