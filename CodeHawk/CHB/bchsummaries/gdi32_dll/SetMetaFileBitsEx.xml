<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="01/15/2015 06:06:21"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="gdi32" name="SetMetaFileBitsEx">
   <documentation>
    <desc>creates a memory-based Windows-format metafile from the supplied data.</desc>
    <apidoc>
     <pt>
      <ll>HMETAFILE SetMetaFileBitsEx(</ll>
      <ld>_In_  UINT nSize </ld>
      <ld>_In_  const BYTE *lpData </ld>
      <ll>)</ll>
     </pt>
     <return>
      <rc cond="success">notnull</rc>
      <rc cond="failure">null</rc>
     </return>
     <par name="nSize">
       Specifies the size, in bytes, of the Windows-format metafile. 
     </par>
     <par name="lpData">
       Pointer to a buffer that contains the Windows-format metafile. (It 
       is assumed that the data was obtained by using the GetMetaFileBitsEx
       function.)
     </par>
    </apidoc>
   </documentation>
   <api adj="8" cc="stdcall" name="SetMetaFileBitsEx">
    <returntype>HMETAFILE</returntype>
    <par loc="stack" io="r" name="nSize" nr="1">
     <type>UINT</type>
     <roles>
      <role rt="size:buffersize" rn="number of bytes of data pointed to" />
     </roles>
    </par>
    <par loc="stack" io="r" name="lpData" nr="2" rep="hex">
     <roles>
      <role rt="ioc:memops" rn="src-bytes:metafile data" />
     </roles>
     <type><ptr>BYTE</ptr></type>
    </par>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="memops" desc="creates a memory-based metafile"/>
    </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-read/>
	    <type>byte</type>
	    <ci>lpData</ci>
	    <ci>nSize</ci>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
     <notnull-null/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
