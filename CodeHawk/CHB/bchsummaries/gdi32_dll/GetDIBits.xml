<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="01/14/2015 03:09:45"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="gdi32" name="GetDIBits">
   <documentation>
    <desc>
      The GetDIBits function retrieves the bits of the specified compatible
      bitmap and copies them into a buffer as a DIB using the specified format.
    </desc>
    <apidoc>
     <pt>
      <ll>int GetDIBits(</ll>
      <ld>_In_     HDC hdc </ld>
      <ld>_In_     HBITMAP hbmp </ld>
      <ld>_In_     UINT uStartScan </ld>
      <ld>_In_     UINT cScanLines </ld>
      <ld>_Out_    LPVOID lpvBits </ld>
      <ld>_Inout_  LPBITMAPINFO lpbi </ld>
      <ld>_In_     UINT uUsage </ld>
      <ll>)</ll>
     </pt>
     <return>
      <rc cond="success">notzero</rc>
      <rc cond="failure">zero</rc>
     </return>
     <par name="hdc">A handle to the device context. </par>
     <par name="hbmp">A handle to the bitmap. This must be a compatible bitmap (DDB)</par>
     <par name="uStartScan">The first scan line to retrieve</par>
     <par name="cScanLines">The number of scan lines to retrieve</par>
     <par name="lpvBits">
       A pointer to a buffer to receive the bitmap data. If this parameter is 
       NULL, the function passes the dimensions and format of the bitmap to 
       the BITMAPINFO structure pointed to by the lpbi parameter.
    </par>
     <par name="lpbi">
     A pointer to a BITMAPINFO structure that specifies the desired format 
     for the DIB data. 
     </par>
     <par name="uUsage">
       The format of the bmiColors member of the BITMAPINFO structure.
     </par>
    </apidoc>
   </documentation>
   <api adj="28" cc="stdcall" name="GetDIBits">
    <returntype>int</returntype>
    <par loc="stack" io="r" name="hdc" nr="1">
      <type>HDC</type>
      <pre><deref-read/></pre>
      <roles>
         <role rt="ioc:process" rn="handle:device context"/>
      </roles>
    </par>
    <par loc="stack" io="r" name="hbmp" nr="2">
      <type>HBITMAP</type>
      <pre><deref-read/></pre>
      <roles>
         <role rt="ioc:process" rn="handle:bitmap"/>
      </roles>
    </par>
    <par loc="stack" io="r" name="uStartScan" nr="3">
     <type>UINT</type>
     <roles>
        <role rt="size:offset" rn="GetDIBits"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="cScanLines" nr="4">
     <type>UINT</type>
     <roles>
        <role rt="size:count" rn="GetDIBits"/>
     </roles>
    </par>
    <par loc="stack" io="w" name="lpvBits" nr="5">
      <type><ptr>VOID</ptr></type>
      <roles>
         <role rt="ioc:memops" rn="src-bytes:misc"/>
      </roles>
    </par>
    <par loc="stack" io="rw" name="lpbi" nr="6">
      <type><ptr>BITMAPINFO</ptr></type>
     <pre><deref-write-null/></pre>
     <sideeffects><block-write/></sideeffects>
      <roles>
         <role rt="ioc:memops" rn="src-struct:BITMAPINFO"/>
	 <role rt="ioc:memops" rn="dst-struct:BITMAPINFO"/>
      </roles>
    </par>
    <par loc="stack" io="r" name="uUsage" roles="none" nr="7">
     <type>UINT</type>
     <roles/>
    </par>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="memops" desc="retrieves bits from device-independent bitmap"/>
    </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-write-null/>
	    <type>byte</type>
	    <ci>lpvBits</ci>
	    <runtime-value/>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
      <nonzero-zero/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
