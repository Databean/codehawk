<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:25:51"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="gdi32" name="CreateDIBSection">
   <documentation>
    <desc>
      creates a DIB (device-independent bitmap)
      that applications can write to directly. The function provides a
      pointer to the location of the bitmap bit values. You can supply a handle to a
      file-mapping object that the function will use to create the bitmap, or you can
      let the system allocate the memory for the bitmap
    </desc>
    <apidoc>
     <pt>
      <ll>HBITMAP CreateDIBSection (</ll>
      <ld>_In_ HDC hdc,</ld>
      <ld>_In_ const BITMAPINFO *pbmi,</ld>
      <ld>_In_ UINT iUsage,</ld>
      <ld>_Out_ VOID **ppvBits,</ld>
      <ld>_In_ HANDLE hSection,</ld>
      <ld>_In_ DWORD dwOffset</ld>
      <ll>)</ll>
     </pt>
     <par name="hdc">handle to a device context</par>
     <par name="pbmi">
       pointer to a BITMAPINFO structure that specifies various attributes of the DIB,
       including the bitmap dimensions and colors
     </par>
     <par name="iUsage">
       type of data contained in the bmiColors array member of the BITMAPINFO structure
       pointed to by the pbmi (either logical palette indexes or literal RGB values)
     </par>
     <par name="ppvBits">
       pointer to a variable that receives a pointer to the location of the DIB bit values
     </par>
     <par name="hSection">
       handle to a file-mapping object that the function will use to create the DIB.
       This parameter can be NULL
     </par>
     <par name="dwOffset">
       offset from the beginning of the file-mapping object referenced by hSection 
       where storage for the bitmap values is to begin. This value is ignored if
       hSection is NULL. The bitmap bit values are aligned on doubleword boundaries,
       so dwOffset must be a multiple of the size of a DWORD
     </par>
     <return>
      <rc cond="success">handle to the newly created DIB</rc>
      <rc cond="failure">NULL</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="24" cc="stdcall" name="CreateDIBSection">
    <returntype>HBITMAP</returntype>
    <par loc="stack" io="r" name="hdc" nr="1">
     <type>HDC</type>
     <pre><deref-read/></pre>
     <roles>
        <role rt="ioc:process" rn="handle:device context"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="pbmi" nr="2" rep="hex">
     <type><ptr>BITMAPINFO</ptr></type>
     <roles>
        <role rt="ioc:memops" rn="src-struct:BITMAPINFO"/>
     </roles>
     <pre><deref-read/></pre>
    </par>
    <par loc="stack" io="r" name="iUsage" roles="none" nr="3">
      <rep type="enum" name="dib_usage_constants"/>
     <type>UINT</type>
     <pre><enum-value name="dib_usage_constants"/></pre>
    </par>
    <par loc="stack" io="w" name="ppvBits" nr="4">
      <type><ptr><ptr>void</ptr></ptr></type>
     <sideeffects><block-write/></sideeffects>
      <roles>
         <role rt="ioc:memops" rn="src-bytes:misc"/>
      </roles>
    </par>
    <par loc="stack" io="r" name="hSection" nr="5">
     <type>HSECTION</type>
     <pre><deref-read-null/></pre>
     <roles>
        <role rt="ioc:process" rn="handle:filemapping"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="dwOffset" nr="6">
     <type>UINT</type>
     <roles>
        <role rt="size:offset" rn="CreateDIBSection"/>
     </roles>
    </par>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="filesystem" desc="creates a device-independent bitmap"/>
    </io-actions>
    <preconditions/>
    <postconditions>
      <notnull-null/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2015, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
