<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="01/14/2015 03:00:32"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="gdi32" name="DPtoLP">
   <documentation>
    <desc>
      The DPtoLP function converts device coordinates into logical coordinates. 
      The conversion depends on the mapping mode of the device context, the 
      settings of the origins and extents for the window and viewport, 
      and the world transformation.
   </desc>
    <apidoc>
     <pt>
      <ll>BOOL DPtoLP(</ll>
      <ld>_In_     HDC hdc </ld>
      <ld>_Inout_  LPPOINT lpPoints </ld>
      <ld>_In_     int nCount </ld>
      <ll>)</ll>
     </pt>
     <return>
      <rc cond="success">notzero</rc>
      <rc cond="failure">zero</rc>
     </return>
     <par name="hdc">A handle to the device context.</par>
     <par name="lpPoints">
       A pointer to an array of POINT structures. The x- and y-coordinates 
       contained in each POINT structure will be transformed.
    </par>
     <par name="nCount">The number of points in the array.</par>
    </apidoc>
   </documentation>
   <api adj="12" cc="stdcall" name="DPtoLP">
     <returntype>BOOL</returntype>
     <par loc="stack" name="hdc" io="r" nr="1">
       <type>HDC</type>
       <roles>
	 <role rt="ioc:process" rn="handle:device context"/>
       </roles>
    </par>
    <par loc="stack" name="lpPoints" io="rw" nr="2">
      <type><ptr>POINT</ptr></type>
      <roles>
	<role rt="ioc:memops" rn="src-struct:POINT"/>
	<role rt="ioc:memops" rn="dst-struct:POINT"/>
      </roles>
    </par>
    <par loc="stack" name="nCount" io="r" nr="3">
      <type>int</type>
      <pre><non-negative/></pre>
      <roles>
	<role rt="size:count" rn="DPtoLP"/>
      </roles>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="system" desc="converts device coordinates to logical coordinates"/>
     </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-read/>
	    <type>POINT</type>
	    <ci>lpPoints</ci>
	    <apply><indexsize/><ci>nCount</ci></apply>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
      <nonzero-zero/>
    </postconditions>
    <sideeffects>
      <sideeffect>
	<math>
	  <apply>
	    <block-write/>
	    <type>POINT</type>
	    <ci>lpPoints</ci>
	    <apply><indexsize/><ci>nCount</ci></apply>
	  </apply>
	</math>
      </sideeffect>
    </sideeffects>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
