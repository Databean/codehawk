<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <header info="libfun" name="FindFirstUrlCacheEntry.xml" time="2016-05-12 23:40:34.705349"/>
  <reference href="http://msdn.microsoft.com"/>
  <libfun lib="wininet" name="FindFirstUrlCacheEntry">
    <documentation>
      <desc>Begins the enumeration of the Internet cache</desc>
      <apidoc>
        <pt>
          <ll>HANDLE FindFirstUrlCacheEntry(</ll>
          <ld>_In_    LPCTSTR                     lpszUrlSearchPattern</ld>
          <ld>_Out_   LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo</ld>
          <ld>_Inout_ LPDWORD                     lpcbCacheEntryInfo</ld>
          <ll>)</ll>
        </pt>
        <par name="lpszUrlSearchPattern">
	  A pointer to a string that contains the source name pattern
	  to search for. This parameter can only be set to "cookie:",
	  "visited:", or NULL. Set this parameter to "cookie:" to
	  enumerate the cookies or "visited:" to enumerate the URL
	  History entries in the cache. If this parameter is NULL,
	  FindFirstUrlCacheEntry returns all content entries in the
	  cache.
	</par>
        <par name="lpFirstCacheEntryInfo">
	  Pointer to an INTERNET_CACHE_ENTRY_INFO structure
	</par>
        <par name="lpcbCacheEntryInfo">
	  Pointer to a variable that specifies the size of the
	  lpFirstCacheEntryInfo buffer, in bytes. When the function
	  returns, the variable contains the number of bytes copied to
	  the buffer, or the required size needed to retrieve the
	  cache entry, in bytes.
	</par>
        <return>
          <rc cond="success">
	    a handle that the application can use in the
	    FindNextUrlCacheEntry function to retrieve subsequent
	    entries in the cache
	  </rc>
          <rc cond="failure">NULL</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="12" cc="stdcall" name="FindFirstUrlCacheEntry">
      <par loc="stack" name="lpszUrlSearchPattern" io="r" nr="1">
        <type>LPCTSTR</type>
	<pre><deref-read-null-nt/></pre>
	<roles>
	  <role rt="ioc:network" rn="url search pattern"/>
	  <role rt="rep:hex" rn="url search pattern"/>
	</roles>
      </par>
      <par loc="stack" name="lpFirstCacheEntryInfo" io="w" nr="2">
        <type><ptr>INTERNET_CACHE_ENTRY_INFO</ptr></type>
	<roles>
	  <role rt="ioc:network" rn="internet cache entry info"/>
	  <role rt="rep:hex" rn="internet cache entry info"/>
	</roles>
      </par>
      <par loc="stack" name="lpcbCacheEntryInfo" io="rw" nr="3">
        <type><ptr>DWORD</ptr></type>
	<pre><deref-read/></pre>
	<sideeffects><block-write/></sideeffects>
	<roles>
	  <role rt="size:buffersize" rn="FindFirstUrlCacheEntry"/>
	</roles>
      </par>
      <returntype>HANDLE</returntype>
    </api>
    <semantics>
      <io-actions>
        <io-action cat="network"
		   desc="begins the enumeration of the internet cache"/>
      </io-actions>
      <preconditions>
	<pre>
	  <math>
	    <apply>
	      <deref-write/>
	      <type>INTERNET_CACHE_ENTRY_INFO</type>
	      <ci>lpFirstCacheEntryInfo</ci>
	      <apply><addressed-value/><ci>lpcbCacheEntryInfo</ci><cn>0</cn></apply>
	    </apply>
	  </math>
	</pre>
      </preconditions>
      <postconditions>
        <notnull-null/>
      </postconditions>
      <sideeffects>
	<sideeffect>
	  <math>
	    <apply>
	      <block-write/>
	      <type>INTERNET_CACHE_ENTRY_INFO</type>
	      <ci>lpFirstCacheEntryInfo</ci>
	      <apply><addressed-value/><ci>lpcbCacheEntryInfo</ci><cn>0</cn></apply>
	    </apply>
	  </math>
	</sideeffect>
      </sideeffects>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
