<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/06/2013 10:32:45"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="user32" name="SetWindowPlacement">
   <documentation>
    <desc>
      Sets the show state and the restored, minimized, and maximized positions
      of the specified window.
    </desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI SetWindowPlacement(</ll>
      <ld>_In_  HWND hWnd,</ld>
      <ld>_In_  const WINDOWPLACEMENT *lpwndpl</ld>
      <ll>)</ll>
     </pt>
     <par name="hWnd">A handle to the window.</par>
     <par name="lpwndpl">
       A pointer to a WINDOWPLACEMENT structure that specifies the new show 
       state and window positions.
     </par>
     <return>
      <rc cond="success">nonzero</rc>
      <rc cond="failure">zero</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="8" cc="stdcall" name="SetWindowPlacement">
    <returntype>BOOL</returntype>
    <par loc="stack" name="hWnd" nr="1">
      <type>HWND</type>
      <pre><deref-read/></pre>
      <roles>
         <role rt="ioc:process" rn="handle:window"/>
      </roles>
    </par>
    <par loc="stack" name="lpwndpl" io="r" rep="hex" nr="2">
     <type><ptr>WINDOWPLACEMENT</ptr></type>
     <pre><deref-read/></pre>
     <roles>
       <role rt="ioc:memops" rn="src-struct:window placement"/>
     </roles>
    </par>
   </api>
   <semantics>
     <io-actions>
        <io-action cat="process" desc="sets the window placement"/>
     </io-actions>
    <preconditions/>
    <postconditions>
     <nonzero-zero/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2015, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
