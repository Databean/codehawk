<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:34:45"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="user32" name="BeginPaint">
   <documentation>
    <desc>
      prepares the specified window for painting and fills a PAINTSTRUCT structure
      with information about the painting
    </desc>
    <apidoc>
     <pt>
      <ll>HDC BeginPaint (</ll>
      <ld>__in  HWND hWnd,</ld>
      <ld>__out LPPAINTSTRUCT lpPaint</ld>
      <ll>)</ll>
     </pt>
     <par name="hWnd">handle to the window to be repainted</par>
     <par name="lpPaint">
       pointer to the PAINTSTRUCT structure that will receive the painting information
     </par>
     <return>
      <rc cond="success">handle to a display device context for the specified window</rc>
      <rc cond="failure">NULL</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="8" cc="stdcall" name="BeginPaint">
     <returntype>HDC</returntype>
     <par loc="stack" name="hWnd" io="r" nr="1">
       <type>HWND</type>
       <pre><deref-read/></pre>
       <roles>
	 <role rt="ioc:process" rn="handle:window"/>
       </roles>
     </par>
     <par loc="stack" name="lpPaint" io="w" nr="2">
       <type><ptr>PAINTSTRUCT</ptr></type>
       <pre><deref-write/></pre>
       <sideeffects><block-write/></sideeffects>
       <roles>
	 <role rt="ioc:memops" rn="dst-struct:paintstruct"/>
       </roles>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="process" desc="prepares a window for painting"/>
     </io-actions>
    <preconditions/>
    <postconditions>
      <notnull-null/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
