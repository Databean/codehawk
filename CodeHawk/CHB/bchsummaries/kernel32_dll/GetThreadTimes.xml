<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:30:10"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="kernel32" name="GetThreadTimes">
   <documentation>
    <desc>retrieves timing information for the specified thread</desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI GetThreadTimes (</ll>
      <ld>__in  HANDLE hThread,</ld>
      <ld>__out LPFILETIME lpCreationTime,</ld>
      <ld>__out LPFILETIME lpExitTime,</ld>
      <ld>__out LPFILETIME lpKernelTime,</ld>
      <ld>__out LPFILETIME lpUserTime</ld>
      <ll>)</ll>
     </pt>
     <par name="hThread">handle to the thread whose timing information is sought</par>
     <par name="lpCreationTime">
       pointer to a FILETIME structure that receives the creation time of the thread
     </par>
     <par name="lpExitTime">
       pointer to a FILETIME structure that receives the exit time of the thread; if the
       thread has not exited, the content of this structure is undefined
     </par>
     <par name="lpKernelTime">
       pointer to a FILETIME structure that receives the amount of time that the thread
       has executed in kernel mode
     </par>
     <par name="lpUserTime">
       pointer to a FILETIME structure that receives the amount of time that the thread has
       executed in user mode
     </par>
     <return>
      <rc cond="success">nonzero</rc>
      <rc cond="failure">zero</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="20" cc="stdcall" name="GetThreadTimes">
     <returntype>BOOL</returntype>
     <par loc="stack" io="r" name="hThread" nr="1">
     <type>HANDLE</type>
     <roles>
      <role rt="ioc:process" rn="handle:thread" />
     </roles>
      <pre><deref-read/></pre>
    </par>
    <par loc="stack" io="w" name="lpCreationTime" nr="2" rep="hex">
     <roles>
      <role rt="ioc:memops" rn="dst-struct:FILETIME" />
      <role rt="ioc:process" rn="infox:thread creation time"/>
     </roles>
     <type><ptr>FILETIME</ptr></type>
     <pre><deref-write/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
    <par loc="stack" io="w" name="lpExitTime" nr="3" rep="hex">
     <roles>
      <role rt="ioc:memops" rn="dst-struct:FILETIME" />
      <role rt="ioc:process" rn="infox:thread exit time"/>
     </roles>
     <type><ptr>FILETIME</ptr></type>
     <pre><deref-write/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
    <par loc="stack" io="w" name="lpKernelTime" nr="4" rep="hex">
     <roles>
      <role rt="ioc:memops" rn="dst-struct:FILETIME" />
      <role rt="ioc:process" rn="infox:thread kernel mode time"/>
     </roles>
     <type><ptr>FILETIME</ptr></type>
     <pre><deref-write/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
    <par loc="stack" io="w" name="lpUserTime" nr="5" rep="hex">
     <roles>
      <role rt="ioc:memops" rn="dst-struct:FILETIME" />
      <role rt="ioc:process" rn="infox:thread user mode time"/>
     </roles>
     <type><ptr>FILETIME</ptr></type>
     <pre><deref-write/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="process" desc="retrieves thread timing information"/>
     </io-actions>
    <preconditions/>
    <postconditions>
     <nonzero-zero/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2017, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
