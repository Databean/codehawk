<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <header info="libfun" name="OpenWaitableTimer.xml" time="2016-10-29 09:21:32.704704"/>
  <reference href="http://msdn.microsoft.com"/>
  <libfun lib="kernel32" name="OpenWaitableTimer">
    <documentation>
      <desc>Opens an existing named waitable timer object</desc>
      <apidoc>
        <pt>
          <ll>HANDLE WINAPI OpenWaitableTimer(</ll>
          <ld>_In_ DWORD   dwDesiredAccess</ld>
          <ld>_In_ BOOL    bInheritHandle</ld>
          <ld>_In_ LPCTSTR lpTimerName</ld>
          <ll>)</ll>
        </pt>
        <par name="dwDesiredAccess">
	  The access to the timer object. The function fails if the
	  security descriptor of the specified object does not permit
	  the requested access for the calling process. For a list of
	  access rights, see Synchronization Object Security and
	  Access Rights.
	</par>
        <par name="bInheritHandle">
	  If this value is TRUE, processes created by this process
	  will inherit the handle. Otherwise, the processes do not
	  inherit this handle.
	</par>
        <par name="lpTimerName">
	  The name of the timer object. The name is limited to
	  MAX_PATH characters. Name comparison is case sensitive.

	  Terminal Services: The name can have a "Global\" or "Local\"
	  prefix to explicitly open an object in the global or session
	  namespace. The remainder of the name can contain any
	  character except the backslash character (\). For more
	  information, see Kernel Object Namespaces.  Note Fast user
	  switching is implemented using Terminal Services
	  sessions. The first user to log on uses session 0, the next
	  user to log on uses session 1, and so on. Kernel object
	  names must follow the guidelines outlined for Terminal
	  Services so that applications can support multiple users.
	</par>
        <return>
          <rc cond="success">a handle to the timer object</rc>
          <rc cond="failure">NULL</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="12" cc="stdcall" name="OpenWaitableTimer">
      <par loc="stack" name="dwDesiredAccess" io="r" roles="none" nr="1">
        <type>DWORD</type>
      </par>
      <par loc="stack" name="bInheritHandle" io="r" roles="none" nr="2">
        <type>BOOL</type>
      </par>
      <par loc="stack" name="lpTimerName" io="r" rep="hex" nr="3">
        <type>LPCTSTR</type>
	<pre><deref-read/></pre>
	<roles>
	  <role rt="ioc:synchronization" rn="name:timer"/>
	</roles>
      </par>
      <returntype>HANDLE</returntype>
    </api>
    <semantics>
      <io-actions>
        <io-action cat="synchronization"
		   desc="opens a named waitable timer object"/>
      </io-actions>
      <preconditions/>
      <postconditions>
        <notnull-null/>
      </postconditions>
      <sideeffects/>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
