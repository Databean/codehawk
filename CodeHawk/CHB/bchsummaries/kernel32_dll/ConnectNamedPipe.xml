<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="01/15/2015 07:53:42"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="kernel32" name="ConnectNamedPipe">
   <documentation>
    <desc>
      Enables a named pipe server process to wait for a client process to 
      connect to an instance of a named pipe. A client process connects by 
      calling either the CreateFile or CallNamedPipe function.
   </desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI ConnectNamedPipe(</ll>
      <ld>_In_         HANDLE hNamedPipe </ld>
      <ld>_Inout_opt_  LPOVERLAPPED lpOverlapped </ld>
      <ll>)</ll>
     </pt>
     <return>
      <rc cond="success">notzero</rc>
      <rc cond="failure">zero</rc>
     </return>
     <par name="hNamedPipe">
       A handle to the server end of a named pipe instance. This handle is 
       returned by the CreateNamedPipe function.
     </par>
     <par name="lpOverlapped">A pointer to an OVERLAPPED structure.
     
    If hNamedPipe was opened with FILE_FLAG_OVERLAPPED, the lpOverlapped parameter 
    must not be NULL. It must point to a valid OVERLAPPED structure. If hNamedPipe 
    was opened with FILE_FLAG_OVERLAPPED and lpOverlapped is NULL, the function 
    can incorrectly report that the connect operation is complete.

    If hNamedPipe was created with FILE_FLAG_OVERLAPPED and lpOverlapped is not NULL, 
    the OVERLAPPED structure should contain a handle to a manual-reset event object 
    (which the server can create by using the CreateEvent function).

    If hNamedPipe was not opened with FILE_FLAG_OVERLAPPED, the function does not
    return until a client is connected or an error occurs. Successful synchronous 
    operations result in the function returning a nonzero value if a client
    connects after the function is called.
     </par>
    </apidoc>
   </documentation>
   <api adj="8" cc="stdcall" name="ConnectNamedPipe">
     <returntype>BOOL</returntype>
     <par loc="stack" io="r" name="hNamedPipe" nr="1">
       <type>HANDLE</type>
       <pre><deref-read/></pre>
       <roles>
         <role rt="ioc:process" rn="handle:pipe"/>
      </roles>
    </par>
    <par loc="stack" io="rw" name="lpOverlapped" roles="none" nr="2">
      <type><ptr>OVERLAPPED</ptr></type>
      <pre><deref-read-null/></pre>
      <sideeffects><block-write/></sideeffects>
    </par>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="filesystem" 
		  desc="named pipe server process waits for a client process to connect"/>
    </io-actions>
    <preconditions/>
    <postconditions>
      <nonzero-zero/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
