<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="03/13/2015 21:13:26"/>
  <libfun lib="kernel32" name="FindFirstFileEx">
   <documentation>
    <desc>
      Searches a directory for a file or subdirectory with a name and 
      attributes that match those specified
    </desc>
    <apidoc>
     <pt>
      <ll>HANDLE WINAPI FindFirstFileEx(</ll>
      <ld>_In_        LPCTSTR lpFileName</ld>
      <ld>_In_        FINDEX_INFO_LEVELS fInfoLevelId</ld>
      <ld>_Out_       LPVOID lpFindFileData</ld>
      <ld>_In_        FINDEX_SEARCH_OPS fSearchOp</ld>
      <ld>_Reserved_  LPVOID lpSearchFilter</ld>
      <ld>_In_        DWORD dwAdditionalFlags</ld>
      <ll>)</ll>
     </pt>
     <par name="lpFileName">
       The directory or path, and the file name, which can include wildcard 
       characters, for example, an asterisk (*) or a question mark (?).
       This parameter should not be NULL, an invalid string (for example, 
       an empty string or a string that is missing the terminating null 
       character), or end in a trailing backslash (\).
       If the string ends with a wildcard, period, or directory name, the 
       user must have access to the root and all subdirectories on the path.
       In the ANSI version of this function, the name is limited to MAX_PATH 
       characters. To extend this limit to approximately 32,000 wide characters, 
       call the Unicode version of the function and prepend "\\?\" to the path
     </par>
     <par name="fInfoLevelId">
       The information level of the returned data.
       This parameter is one of the FINDEX_INFO_LEVELS enumeration values
     </par>
     <par name="lpFindFileData">
       A pointer to the buffer that receives the file data.
       The pointer type is determined by the level of information that is 
       specified in the fInfoLevelId parameter.
     </par>
     <par name="fSearchOp">
       The type of filtering to perform that is different from wildcard matching.
       This parameter is one of the FINDEX_SEARCH_OPS enumeration values
     </par>
     <par name="lpSearchFilter">
       A pointer to the search criteria if the specified fSearchOp needs 
       structured search information.
       At this time, none of the supported fSearchOp values require extended 
       search information. Therefore, this pointer must be NULL
     </par>
     <par name="dwAdditionalFlags">
       Specifies additional flags that control the search
     </par>
     <return>
      <rc cond="success">
	a search handle used in a subsequent call to FindNextFile or FindClose;
	the lpFindFileData parameter contains information about the first 
	file or directory found
      </rc>
      <rc cond="failure">INVALID_HANDLE_VALUE</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="24" cc="stdcall" name="FindFirstFileEx">
     <par loc="stack" name="lpFileName" io="r" nr="1" rep="hex">
       <type>LPCTSTR</type>
       <pre><deref-read/></pre>
       <roles>
	 <role rt="ioc:filesystem" rn="name:file"/>
       </roles>
    </par>
    <par loc="stack" name="fInfoLevelId" io="r" roles="none" nr="2">
      <rep type="enum" name="findex_info_levels_constants"/>
      <type>FINDEX_INFO_LEVELS</type>
      <pre><enum-value name="findex_info_levels_constants"/></pre>
    </par>
    <par loc="stack" name="lpFindFileData" io="w" nr="3" rep="hex">
      <type><ptr>WIN32_FIND_DATA</ptr></type>
      <pre><deref-write/></pre>
      <sideeffects><block-write/></sideeffects>
      <roles>
	<role rt="ioc:memops" rn="dst-struct:win32-find-data"/>
      </roles>
    </par>
    <par loc="stack" name="fSearchOp" io="r" roles="none" nr="4">
     <rep type="enum" name="findex_search_ops_constants"/>
     <type>FINDEX_SEARCH_OPS</type>
     <pre><enum-value name="findex_search_ops_constants"/></pre>
    </par>
    <par loc="stack" name="lpSearchFilter" roles="none" nr="5">
     <type>LPVOID</type>
     <pre><null/></pre>
    </par>
    <par loc="stack" name="dwAdditionalFlags" io="r" roles="none" nr="6">
     <type>DWORD</type>
    </par>
    <returntype>HANDLE</returntype>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="filesystem"
		  desc="searches a directory for a file or subdirectory"/>
     </io-actions>
    <preconditions/>
    <postconditions>
      <notnull-null/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
