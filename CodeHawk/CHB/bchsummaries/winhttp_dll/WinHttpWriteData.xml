<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <header info="libfun" name="WinHttpWriteData.xml" time="2016-05-07 23:26:51.145368"/>
  <reference href="http://msdn.microsoft.com"/>
  <libfun lib="winhttp" name="WinHttpWriteData">
    <documentation>
      <desc>writes request data to an HTTP server</desc>
      <apidoc>
        <pt>
          <ll>BOOL WINAPI WinHttpWriteData(</ll>
          <ld>_In_  HINTERNET hRequest</ld>
          <ld>_In_  LPCVOID   lpBuffer</ld>
          <ld>_In_  DWORD     dwNumberOfBytesToWrite</ld>
          <ld>_Out_ LPDWORD   lpdwNumberOfBytesWritten</ld>
          <ll>)</ll>
        </pt>
        <par name="hRequest">
	  Valid HINTERNET handle returned by WinHttpOpenRequest. Wait
	  until WinHttpSendRequest has completed before calling this
	  function.
	</par>
        <par name="lpBuffer">
	  Pointer to a buffer that contains the data to be sent to the
	  server. Be sure that this buffer remains valid until after
	  WinHttpWriteData completes.
	</par>
        <par name="dwNumberOfBytesToWrite">
	  Unsigned long integer value that contains the number of
	  bytes to be written to the file.
	</par>
        <par name="lpdwNumberOfBytesWritten">
	  Pointer to an unsigned long integer variable that receives
	  the number of bytes written to the buffer. The
	  WinHttpWriteData function sets this value to zero before
	  doing any work or error checking. When using WinHTTP
	  asynchronously, this parameter must be set to NULL and
	  retrieve the information in the callback function. Not doing
	  so can cause a memory fault.
	</par>
        <return>
          <rc cond="success">TRUE</rc>
          <rc cond="failure">FALSE</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="16" cc="stdcall" name="WinHttpWriteData">
      <par loc="stack" name="hRequest" io="r" rep="hex" nr="1">
        <type>HINTERNET</type>
	<pre><deref-read/></pre>
	<roles>
	  <role rt="ioc:network" rn="handle:internet"/>
	</roles>
      </par>
      <par loc="stack" name="lpBuffer" io="r" nr="2">
        <type><ptr>void</ptr></type>
	<roles>
	  <role rt="ioc:network" rn="data sent to http server"/>
	</roles>
      </par>
      <par loc="stack" name="dwNumberOfBytesToWrite" io="r" nr="3">
        <type>DWORD</type>
	<roles>
	  <role rt="size:buffersize" rn="WinHttpWriteData"/>
	</roles>
      </par>
      <par loc="stack" name="lpdwNumberOfBytesWritten" io="w" nr="4">
        <type><ptr>DWORD</ptr></type>
	<pre><deref-write/></pre>
	<sideeffects><block-write/></sideeffects>
        <roles>
           <role rt="size:actual" rn="WinHttpWriteData"/>
        </roles>
      </par>
      <returntype>BOOL</returntype>
    </api>
    <semantics>
      <io-actions>
        <io-action cat="network" 
		   desc="writes request data to an HTTP server"/>
      </io-actions>
      <preconditions>
	<pre>
	  <math>
	    <apply>
	      <deref-read/>
	      <type>byte</type>
	      <ci>lpBuffer</ci>
	      <ci>dwNumberOfBytesToWrite</ci>
	    </apply>
	  </math>
	</pre>
      </preconditions>
      <postconditions>
        <notzero-zero/>
      </postconditions>
      <sideeffects/>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
