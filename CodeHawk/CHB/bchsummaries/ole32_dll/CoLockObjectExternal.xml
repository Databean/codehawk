<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="01/21/2015 05:21:23"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="ole32" name="CoLockObjectExternal">
   <documentation>
    <desc>
      Called either to lock an object to ensure that it stays in memory,
      or to release such a lock. 
    </desc>
    <apidoc>
     <pt>
      <ll>HRESULT CoLockObjectExternal(</ll>
      <ld>_In_  LPUNKNOWN pUnk</ld>
      <ld>_In_  BOOL fLock</ld>
      <ld>_In_  BOOL fLastUnlockReleases</ld>
      <ll>)</ll>
     </pt>
     <return>
      <rc cond="success">S_OK</rc>
      <rc cond="failure">E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED</rc>
     </return>
     <par name="pUnk">
       A pointer to the IUnknown interface on the object to be locked or unlocked.
     </par>
     <par name="fLock">
       Indicates whether the object is to be locked or released. If this parameter 
       is TRUE, the object is kept in memory, independent of AddRef/Release operations,
       registrations, or revocations. If this parameter is FALSE, the lock previously
       set with a call to this function is released.
     </par>
     <par name="fLastUnlockReleases">
       If the lock is the last reference that is supposed to keep an object alive, 
       specify TRUE to release all pointers to the object (there may be other 
       references that are not supposed to keep it alive). Otherwise, specify FALSE.
       If fLock is TRUE, this parameter is ignored.
     </par>
    </apidoc>
   </documentation>
   <api adj="12" cc="stdcall" name="CoLockObjectExternal">
    <returnbtype tname="HRESULT" ttag="tnamed"/>
    <par loc="stack" name="pUnk" io="r" rep="hex" nr="1">
      <type><ptr>UNKNOWN</ptr></type>
      <pre><deref-read/></pre>
      <roles>
         <role rt="ioc:com" rn="ifp:IUnknown"/>
      </roles>
    </par>
    <par loc="stack" name="fLock" io="r" roles="none" nr="2">
      <type>BOOL</type>
    </par>
    <par loc="stack" name="fLastUnlockReleases" io="r" roles="none" nr="3">
      <type>BOOL</type>
    </par>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="com"
		  desc="locks or releases an object"/>
    </io-actions>
    <preconditions/>
    <postconditions/>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2017, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
