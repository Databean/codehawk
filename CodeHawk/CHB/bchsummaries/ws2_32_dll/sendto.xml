<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="03/06/2015 23:41:01"/>
  <libfun lib="ws2_32" name="sendto">
   <documentation>
    <desc>sends data to a specific destination</desc>
    <apidoc>
     <pt>
      <ll>int sendto(</ll>
      <ld>_In_  SOCKET s</ld>
      <ld>_In_  const char *buf</ld>
      <ld>_In_  int len</ld>
      <ld>_In_  int flags</ld>
      <ld>_In_  const struct sockaddr *to</ld>
      <ld>_In_  int tolen</ld>
      <ll>)</ll>
     </pt>
     <par name="s">A descriptor identifying a (possibly connected) socket</par>
     <par name="buf">A pointer to a buffer containing the data to be transmitted</par>
     <par name="len">The length, in bytes, of the data pointed to by the buf parameter</par>
     <par name="flags">A set of flags that specify the way in which the call is made</par>
     <par name="to">
       An optional pointer to a sockaddr structure that contains the address of 
       the target socket.
     </par>
     <par name="tolen">
       The size, in bytes, of the address pointed to by the to parameter
     </par>
     <return>
       If no error occurs, sendto returns the total number of bytes sent, which 
       can be less than the number indicated by len. Otherwise, a value of 
       SOCKET_ERROR is returned, and a specific error code can be retrieved
       by calling WSAGetLastError
     </return>
    </apidoc>
   </documentation>
   <api adj="24" cc="stdcall" name="sendto">
    <par loc="stack" name="s" io="r" nr="1">
     <type>SOCKET</type>
     <roles>
       <role rt="ioc:network" rn="socket"/>
     </roles>
    </par>
    <par loc="stack" name="buf" io="r" nr="2">
     <type><ptr>char</ptr></type>
     <roles>
       <role rt="ioc:memops" rn="src-buffer:network data output"/>
     </roles>
    </par>
    <par loc="stack" name="len" io="r" nr="3">
     <type>int</type>
     <pre><non-negative/></pre>
     <roles>
       <role rt="size:buffersize" rn="sendto"/>
     </roles>
    </par>
    <par loc="stack" name="flags" io="r" roles="none" nr="4">
      <type>int</type>
    </par>
    <par loc="stack" name="to" io="r" nr="5" rep="hex">
     <type><ptr>sockaddr</ptr></type>
     <pre><deref-read-null/></pre>
     <roles>
       <role rt="ioc:memops" rn="src-struct:socket address"/>
     </roles>
    </par>
    <par loc="stack" name="tolen" io="r" nr="6">
     <type>int</type>
     <pre><non-negative/></pre>
     <roles>
       <role rt="size:buffersize" rn="sendto"/>
     </roles>
    </par>
    <returntype>int</returntype>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="network" desc="sends data onto the network"/>
     </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-read/>
	    <type>sockaddr</type>
	    <ci>to</ci>
	    <ci>tolen</ci>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
      <nonnegative-negative/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
