<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:38:11"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="ws2_32" name="WSARecv">
   <documentation>
    <desc>receives data from a connected socket or a bound connectionless socket</desc>
    <apidoc>
     <pt>
      <ll>int WSARecv (</ll>
      <ld>__in    SOCKET s,</ld>
      <ld>__inout LPWSABUF lpBuffers,</ld>
      <ld>__in    DWORD dwBufferCount,</ld>
      <ld>__out   LPDWORD lpNumberOfBytesRecvd,</ld>
      <ld>__inout LPDWORD lpFlags,</ld>
      <ld>__in    LPWSAOVERLAPPED lpOverlapped,</ld>
      <ld>__in    LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine</ld>
      <ll>)</ll>
     </pt>
     <par name="s">descriptor identifying a connected socket</par>
     <par name="lpBuffers">pointer to an array of WSABUF structures</par>
     <par name="dwBufferCount">number of WSABUF structures in the lpBuffers array</par>
     <par name="lpNumberOfBytesRecvd">
       pointer to the number, in bytes, of data received by this call if the receive
       operation completes immediately; can be NULL if lpOverlapped is not NULL
     </par>
     <par name="lpFlags">
       pointer to flags used to modify the behavior of the WSARecv function call.
       The lpFlags parameter is used both on input and returned on output, allowing 
       applications to sense the output state of the MSG_PARTIAL flag bit
     </par>
     <par name="lpOverlapped">pointer to a WSAOVERLAPPED structure</par>
     <par name="lpCompletionRoutine">
       pointer to the completion routine called when the receive
       operation has been completed
     </par>
     <return>
      <rc cond="success">zero</rc>
      <rc cond="failure">SOCKET_ERROR</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="28" cc="stdcall" name="WSARecv">
     <returntype>SOCKET</returntype>
     <par loc="stack" name="s" io="r" nr="1">
       <type>SOCKET</type>
       <roles>
	 <role rt="ioc:network" rn="socket"/>
       </roles>
    </par>
    <par loc="stack" name="lpBuffers" io="w" nr="2" rep="hex">
      <type><ptr>WSABUF</ptr></type>
      <roles>
	<role rt="ioc:memops" rn="dst-bytes:network input"/>
      </roles>
    </par>
    <par loc="stack" name="dwBufferCount" io="r" nr="3">
      <type>DWORD</type>
      <pre><non-negative/></pre>
      <roles>
	<role rt="size:buffersize" rn="WSARecv"/>
      </roles>
    </par>
    <par loc="stack" name="lpNumberOfBytesRecvd" io="r" nr="4" rep="hex">
      <type><ptr>DWORD</ptr></type>
      <pre><deref-write/></pre>
      <sideeffects><block-write/></sideeffects>
      <roles>
	<role rt="size:actual" rn="WSARecv"/>
      </roles>
    </par>
    <par loc="stack" name="lpFlags" io="rw" nr="5" roles="none" rep="hex">
      <type><ptr>DWORD</ptr></type>
      <pre><deref-read/></pre>
      <sideeffects><block-write/></sideeffects>
    </par>
    <par loc="stack" name="lpOverlapped" io="r" roles="none" nr="6" rep="hex">
      <type><ptr>WSAOVERLAPPED</ptr></type>
      <pre><deref-read/></pre>
    </par>
    <par loc="stack" name="lpCompletionRoutine" io="r" nr="7" rep="hex">
     <type><ptr>WSAOVERLAPPED_COMPLETION_ROUTINE</ptr></type>
     <pre><deref-read/></pre>
     <roles>
       <role rt="ioc:network" rn="callbackf:network download"/>
     </roles>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="network" desc="receives data from a socket"/>
     </io-actions>
    <preconditions>
     <pre>
      <math>
       <apply>
	 <deref-read/>
	 <type>WSABUF</type>
	 <ci>lpBuffers</ci>
	 <apply><indexsize/><ci>dwBufferCount</ci></apply>
       </apply>
      </math>
     </pre>
    </preconditions>
    <postconditions>
      <zero-negone/>
    </postconditions>
    <sideeffects>
     <sideeffect>
      <math>
       <apply>
        <block-write/>
	 <type>WSABUF</type>
	 <ci>lpBuffers</ci>
	 <apply><indexsize/><ci>dwBufferCount</ci></apply>
       </apply>
      </math>
     </sideeffect>
    </sideeffects>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
