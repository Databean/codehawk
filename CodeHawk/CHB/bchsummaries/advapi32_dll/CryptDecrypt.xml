<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="04/15/2015 16:22:45"/>
  <libfun lib="advapi32" name="CryptDecrypt">
   <documentation>
    <desc>decrypts data previously encrypted by using the CryptEncrypt function</desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI CryptDecrypt(</ll>
      <ld>_In_     HCRYPTKEY hKey</ld>
      <ld>_In_     HCRYPTHASH hHash</ld>
      <ld>_In_     BOOL Final</ld>
      <ld>_In_     DWORD dwFlags</ld>
      <ld>_Inout_  BYTE *pbData</ld>
      <ld>_Inout_  DWORD *pdwDataLen</ld>
      <ll>)</ll>
     </pt>
     <par name="hKey">
       A handle to the key to use for the decryption. An application obtains this
       handle by using either the CryptGenKey or CryptImportKey function.
       This key specifies the decryption algorithm to be used.
     </par>
     <par name="hHash">
       A handle to a hash object. If data is to be decrypted and hashed 
       simultaneously, a handle to a hash object is passed in this parameter.
       The hash value is updated with the decrypted plaintext. This option 
       is useful when simultaneously decrypting and verifying a signature.
       Before calling CryptDecrypt, the application must obtain a handle to
       the hash object by calling the CryptCreateHash function. After the 
       decryption is complete, the hash value can be obtained by using the
       CryptGetHashParam function, it can also be signed by using the 
       CryptSignHash function, or it can be used to verify a digital 
       signature by using the CryptVerifySignature function.
       If no hash is to be done, this parameter must be zero
     </par>
     <par name="Final">
       A Boolean value that specifies whether this is the last section in 
       a series being decrypted. This value is TRUE if this is the last or 
       only block. If this is not the last block, this value is FALSE. 
     </par>
     <par name="dwFlags">flags</par>
     <par name="pbData">
       A pointer to a buffer that contains the data to be decrypted. After 
       the decryption has been performed, the plaintext is placed back into 
       this same buffer.
       The number of encrypted bytes in this buffer is specified by pdwDataLen.
     </par>
     <par name="pdwDataLen">
       A pointer to a DWORD value that indicates the length of the pbData buffer.
       Before calling this function, the calling application sets the DWORD value 
       to the number of bytes to be decrypted. Upon return, the DWORD value 
       contains the number of bytes of the decrypted plaintext.
       When a block cipher is used, this data length must be a multiple of the 
       block size unless this is the final section of data to be decrypted and 
       the Final parameter is TRUE.
     </par>
     <return>
      <rc cond="success">nonzero</rc>
      <rc cond="failure">zero</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="24" cc="stdcall" name="CryptDecrypt">
    <par loc="stack" io="r" name="hKey" nr="1">
     <roles>
        <role rt="ioc:crypto" rn="handle:cryptographic key"/>
     </roles>
     <type>HCRYPTKEY</type>
     <pre><deref-read/></pre>
    </par>
    <par loc="stack" io="r" name="hHash" nr="2">
     <roles>
        <role rt="ioc:crypto" rn="handle:cryptographic hash"/>
     </roles>
     <type>HCRYPTHASH</type>
     <pre><deref-read/></pre>
    </par>
    <par loc="stack" io="r" name="Final" roles="none" nr="3">
     <type>BOOL</type>
    </par>
    <par loc="stack" io="r" name="dwFlags" roles="none" nr="4">
     <type>DWORD</type>
    </par>
    <par loc="stack" name="pbData" rep="hex" io="rw" nr="5">
     <type><ptr>BYTE</ptr></type>
     <roles>
        <role rt="ioc:memops" rn="src-bytes:ciphertext"/>
	<role rt="ioc:memops" rn="dst-bytes:plaintext"/>
     </roles>
    </par>
    <par loc="stack" name="pdwDataLen" io="rw" nr="6">
     <type><ptr>DWORD</ptr></type>
     <roles>
        <role rt="size:buffersize" rn="CryptDecrypt"/>
        <role rt="size:required" rn="CryptDecrypt"/>
     </roles>
     <pre><deref-read/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
    <returntype>BOOL</returntype>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="crypto"
                  desc="decrypts data previously encrypted by CryptEncrypt"/>
    </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-read/>
	    <type>BYTE</type>
	    <ci>pbData</ci>
	    <apply><addressed-value/><ci>pdwDataLen</ci><cn>0</cn></apply>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
      <nonzero-zero/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
