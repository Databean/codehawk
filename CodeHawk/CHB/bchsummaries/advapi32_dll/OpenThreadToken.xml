<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="01/13/2015 03:04:26"/>
  <reference href="http://msdn.microsoft.com/"/>
  <libfun lib="advapi32" name="OpenThreadToken">
   <documentation>
    <desc>opens the access token associated with a thread.</desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI OpenThreadToken(</ll>
      <ld>_In_   HANDLE ThreadHandle </ld>
      <ld>_In_   DWORD DesiredAccess </ld>
      <ld>_In_   BOOL OpenAsSelf </ld>
      <ld>_Out_  PHANDLE TokenHandle </ld>
      <ll>)</ll>
     </pt>
     <return>
      <rc cond="success">notzero</rc>
      <rc cond="failure">zero</rc>
     </return>
     <par name="ThreadHandle">A handle to the thread whose access token is opened.</par>
     <par name="DesiredAccess">
       Specifies an access mask that specifies the requested types of access to 
       the access token. 
       These requested access types are reconciled against the token&apos;s 
       discretionary access control list (DACL) to determine which accesses 
       are granted or denied. 
    </par>
     <par name="OpenAsSelf">
       TRUE if the access check is to be made against the process-level security context.
       FALSE if the access check is to be made against the current security context 
       of the thread calling the OpenThreadToken function.
    </par>
     <par name="TokenHandle">
       A pointer to a variable that receives the handle to the newly opened access token.
     </par>
    </apidoc>
   </documentation>
   <api adj="16" cc="stdcall" name="OpenThreadToken">
     <returntype>BOOL</returntype>
     <par loc="stack" name="ThreadHandle" nr="1">
       <type>HANDLE</type>
       <pre><deref-read/></pre>
       <roles>
	 <role rt="ioc:process" rn="handle:thread"/>
       </roles>
     </par>
     <par loc="stack" name="DesiredAccess" io="r"  roles="none" nr="2">
       <type>DWORD</type>
     </par>
     <par loc="stack" name="OpenAsSelf" io="r" roles="none" nr="3">
       <type>BOOL</type>
     </par>
     <par loc="stack" name="TokenHandle" io="w" nr="4" rep="hex">
       <type><ptr>HANDLE</ptr></type>
       <pre><deref-write/></pre>
       <sideeffects><block-write/></sideeffects>
       <roles>
	 <role rt="ioc:process" rn="ref:access token handle"/>
       </roles>
     </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="process" desc="opens a thread access token"/>
     </io-actions>
    <preconditions/>
    <postconditions>
     <nonzero-zero/>
    </postconditions>
    <sideeffects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
