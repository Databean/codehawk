<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="08/18/2015 13:55:37"/>
  <libfun lib="advapi32" name="QueryServiceConfig2">
   <documentation>
    <desc>
      Retrieves the optional configuration parameters of the specified service.
    </desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI QueryServiceConfig2(</ll>
      <ld>_In_      SC_HANDLE hService</ld>
      <ld>_In_      DWORD     dwInfoLevel</ld>
      <ld>_Out_opt_ LPBYTE    lpBuffer</ld>
      <ld>_In_      DWORD     cbBufSize</ld>
      <ld>_Out_     LPDWORD   pcbBytesNeeded</ld>
      <ll>)</ll>
     </pt>
     <par name="hService">
       A handle to the service. This handle is returned by the OpenService or 
       CreateService function and must have the SERVICE_QUERY_CONFIG access right
     </par>
     <par name="dwInfoLevel">The configuration information to be queried</par>
     <par name="lpBuffer">
       A pointer to the buffer that receives the service configuration information.
       The format of this data depends on the value of the dwInfoLevel parameter.
       The maximum size of this array is 8K bytes. To determine the required size, 
       specify NULL for this parameter and 0 for the cbBufSize parameter. The function
       fails and GetLastError returns ERROR_INSUFFICIENT_BUFFER. The pcbBytesNeeded
       parameter receives the needed size.
     </par>
     <par name="cbBufSize">
       The size of the structure pointed to by the lpBuffer parameter, in bytes.
     </par>
     <par name="pcbBytesNeeded">
       A pointer to a variable that receives the number of bytes required to store 
       the configuration information, if the function fails with ERROR_INSUFFICIENT_BUFFER.
     </par>
     <return>
      <rc cond="success">nonzero</rc>
      <rc cond="failure">zero</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="20" cc="stdcall" name="QueryServiceConfig2">
    <par loc="stack" name="hService" io="r" rep="hex" nr="1">
     <type>SC_HANDLE</type>
     <pre><deref-read/></pre>
     <roles>
       <role rt="ioc:services" rn="handle:service"/>
     </roles>
    </par>
    <par loc="stack" name="dwInfoLevel" roles="none" nr="2">
      <rep type="enum" name="service_config_constants"/>
      <type>DWORD</type>
      <pre><enum-value name="service_config_constants"/></pre>
    </par>
    <par loc="stack" name="lpBuffer" io="w" rep="hex" nr="3">
     <type><ptr>BYTE</ptr></type>
     <roles>
       <role rt="ioc:memops" rn="dst-bytes:service configuration info"/>
     </roles>
    </par>
    <par loc="stack" name="cbBufSize" io="r" nr="4">
     <type>DWORD</type>
     <roles>
       <role rt="size:buffersize" rn="QueryServiceConfig2"/>
     </roles>
    </par>
    <par loc="stack" name="pcbBytesNeeded" io="w" rep="hex" nr="5">
     <type><ptr>DWORD</ptr></type>
     <roles>
       <role rt="size:actual" rn="QueryServiceConfig2"/>
     </roles>
    </par>
    <returntype>BOOL</returntype>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="services"
		  desc="retrieves the optional configuration parameters of a service"/>
     </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-write-null/>
	    <type>BYTE</type>
	    <ci>lpBuffer</ci>
	    <ci>cbBufSize</ci>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
      <notzero-zero/>
    </postconditions>
    <sideeffects>
      <sideeffect>
	<math>
	  <apply>
	    <block-write/>
	    <type>BYTE</type>
	    <ci>lpBuffer</ci>
	    <ci>cbBufSize</ci>
	  </apply>
	</math>
      </sideeffect>
    </sideeffects>
    <external-effects/>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
