<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <reference href="http://msdn.microsoft.com/"/>
  <header date="04/15/2015 16:52:37"/>
  <libfun lib="advapi32" name="CryptEnumProviders">
   <documentation>
    <desc>
      retrieves the first or next available cryptographic service providers 
      (CSPs). Used in a loop, this function can retrieve in sequence all of
      the CSPs available on a computer.
    </desc>
    <apidoc>
     <pt>
      <ll>BOOL WINAPI CryptEnumProviders(</ll>
      <ld>_In_     DWORD dwIndex</ld>
      <ld>_In_     DWORD *pdwReserved</ld>
      <ld>_In_     DWORD dwFlags</ld>
      <ld>_Out_    DWORD *pdwProvType</ld>
      <ld>_Out_    LPTSTR pszProvName</ld>
      <ld>_Inout_  DWORD *pcbProvName</ld>
      <ll>)</ll>
     </pt>
     <par name="dwIndex">Index of the next provider to be enumerated.</par>
     <par name="pdwReserved">Reserved for future use and must be NULL.</par>
     <par name="dwFlags">Reserved for future use and must be zero.</par>
     <par name="pdwProvType">
       Address of the DWORD value designating the type of the enumerated provider.
     </par>
     <par name="pszProvName">
       A pointer to a buffer that receives the data from the enumerated provider. 
       This is a string including the terminating null character.
       This parameter can be NULL to set the size of the name for memory allocation 
       purposes. 
     </par>
     <par name="pcbProvName">
       A pointer to a DWORD value specifying the size, in bytes, of the buffer 
       pointed to by the pszProvName parameter. When the function returns, the
       DWORD value contains the number of bytes stored in the buffer.
       Note  When processing the data returned in the buffer, applications must
       use the actual size of the data returned. The actual size can be slightly 
       smaller than the size of the buffer specified on input. (On input, buffer 
       sizes are usually specified large enough to ensure that the largest possible 
       output data fits in the buffer.) On output, the variable pointed to by 
       this parameter is updated to reflect the actual size of the data copied 
       to the buffer.
     </par>
     <return>
      <rc cond="success">nonzero</rc>
      <rc cond="failure">zero</rc>
     </return>
    </apidoc>
   </documentation>
   <api adj="24" cc="stdcall" name="CryptEnumProviders">
    <par loc="stack" io="r" name="dwIndex" nr="1">
     <type>DWORD</type>
     <roles>
       <role rt="size:index" rn="CryptEnumProviders"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="pdwReserved" roles="none" nr="2">
     <type><ptr>DWORD</ptr></type>
    </par>
    <par loc="stack" io="r" name="dwFlags" roles="none" nr="3"><!-- not used -->
     <type>DWORD</type>
    </par>
    <par loc="stack" io="w" name="pdwProvType" rep="hex" nr="4">
     <type><ptr>DWORD</ptr></type>
     <roles>
        <role rt="ioc:crypto" rn="type:CSP"/>
     </roles>
     <pre><deref-write/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
    <par loc="stack" io="rw" name="pszProvName" rep="hex" nr="5">
     <type>LPTSTR</type>
     <roles>
        <role rt="ioc:crypto" rn="name:CSP"/>
     </roles>
    </par>
    <par loc="stack" io="rw" name="pcbProvName" nr="6">
     <type><ptr>DWORD</ptr></type>
     <roles>
        <role rt="size:buffersize" rn="CryptEnumProviders"/>
        <role rt="size:actual" rn="CryptEnumProviders"/>
     </roles>
     <pre><deref-read/></pre>
     <sideeffects><block-write/></sideeffects>
    </par>
    <returntype>BOOL</returntype>
   </api>
   <semantics>
    <io-actions>
       <io-action cat="crypto"
                  desc="retrieves a cryptographic service provider"/>
    </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-write-null/>
	    <type>TCHAR</type>
	    <ci>pszProvName</ci>
	    <apply><addressed-value/><ci>pcbProvName</ci><cn>0</cn></apply>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
      <nonzero-zero/>
    </postconditions>
    <sideeffects>
      <sideeffect>
	<math>
	  <apply>
	    <block-write/>
	    <type>TCHAR</type>
	    <ci>pszProvName</ci>
	    <apply><addressed-value/><ci>pcbProvName</ci><cn>0</cn></apply>
	  </apply>
	</math>
      </sideeffect>
    </sideeffects>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
