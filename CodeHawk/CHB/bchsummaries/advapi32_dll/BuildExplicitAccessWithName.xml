<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <header info="libfun" name="BuildExplicitAccessWithName.xml" time="2016-05-08 21:08:51.266014"/>
  <reference href="http://msdn.microsoft.com"/>
  <libfun lib="advapi32" name="BuildExplicitAccessWithName">
    <documentation>
      <desc>
	initializes an EXPLICIT_ACCESS structure with data specified
	by the caller. The trustee is identified by a name string
      </desc>
      <apidoc>
        <pt>
          <ll>VOID WINAPI BuildExplicitAccessWithName(</ll>
          <ld>_Inout_  PEXPLICIT_ACCESS pExplicitAccess</ld>
          <ld>_In_opt_ LPTSTR           pTrusteeName</ld>
          <ld>_In_     DWORD            AccessPermissions</ld>
          <ld>_In_     ACCESS_MODE      AccessMode</ld>
          <ld>_In_     DWORD            Inheritance</ld>
          <ll>)</ll>
        </pt>
        <par name="pExplicitAccess">
	  A pointer to an EXPLICIT_ACCESS structure to initialize. The
	  BuildExplicitAccessWithName function does not allocate any
	  memory. This parameter cannot be NULL.
	</par>
        <par name="pTrusteeName">
	  A pointer to a null-terminated string that contains the name
	  of the trustee for the ptstrName member of the TRUSTEE
	  structure
	</par>
        <par name="AccessPermissions">
	  Specifies an access mask for the grfAccessPermissions member
	  of the EXPLICIT_ACCESS structure. The mask is a set of bit
	  flags that use the ACCESS_MASK format to specify the access
	  rights that an ACE allows, denies, or audits for the
	  trustee. The functions that use the EXPLICIT_ACCESS
	  structure do not convert, interpret, or validate the bits in
	  this mask.
	</par>
        <par name="AccessMode">
	  Specifies an access mode for the grfAccessMode member of the
	  EXPLICIT_ACCESS structure. The access mode indicates whether
	  the access control entry (ACE) allows, denies, or audits the
	  specified rights. For a discretionary access control list
	  (DACL), this parameter can be one of the values from the
	  ACCESS_MODE enumeration. For a system access control list
	  (SACL), this parameter can be a combination of ACCESS_MODE
	  values.
	</par>
        <par name="Inheritance">
	  Specifies an inheritance type for the grfInheritance member
	  of the EXPLICIT_ACCESS structure. This value is a set of bit
	  flags that determine whether other containers or objects can
	  inherit the ACE from the primary object to which the ACL is
	  attached. The value of this member corresponds to the
	  inheritance portion (low-order byte) of the AceFlags member
	  of the ACE_HEADER structure
	</par>
        <return/>
      </apidoc>
    </documentation>
    <api adj="20" cc="stdcall" name="BuildExplicitAccessWithName">
      <par loc="stack" name="pExplicitAccess" io="rw" nr="1">
        <type><ptr>EXPLICIT_ACCESS</ptr></type>
	<pre><deref-read/></pre>
	<roles>
	  <role rt="ioc:system" rn="explicit access structure"/>
	  <role rt="rep:hex" rn="explicit access structure"/>
	</roles>
      </par>
      <par loc="stack" name="pTrusteeName" io="r" nr="2">
        <type>LPTSTR</type>
	<pre><deref-read-null-nt/></pre>
	<roles>
	  <role rt="ioc:system" rn="trustee name"/>
	  <role rt="rep:hex" rn="trustee name"/>
	</roles>
      </par>
      <par loc="stack" name="AccessPermissions" io="r" nr="3">
        <type>DWORD</type>
	<roles>
	  <role rt="ioc:system" rn="access permissions"/>
	</roles>
      </par>
      <par loc="stack" name="AccessMode" io="r" nr="4">
        <type>DWORD</type>
	<roles>
	  <role rt="ioc:system" rn="access mode"/>
	</roles>
      </par>
      <par loc="stack" name="Inheritance" io="r" nr="5">
        <type>DWORD</type>
	<roles>
	  <role rt="ioc:system" rn="explicit access inheritance"/>
	</roles>
      </par>
      <returntype>VOID</returntype>
    </api>
    <semantics>
      <io-actions>
        <io-action cat="system"
		   desc="initializes an explicit access structure with a trustee"/>
      </io-actions>
      <preconditions/>
      <postconditions/>
      <sideeffects/>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
