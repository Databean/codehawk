<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-09 23:52:07"/>
  <class name="Socket" package="java.net">
    <interfaces>
      <implements>java.io.Closeable</implements>
      <implements>java.lang.AutoCloseable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="public">
        <signature/>
        <exceptions>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.net.Proxy) -->
      <constructor access="public" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.Proxy</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.net.SocketImpl) -->
      <constructor access="protected" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.SocketImpl</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.net.UnknownHostException</throws>
          <throws>java.net.SocketException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.net.UnknownHostException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.net.InetAddress,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.net.InetAddress</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,int,java.net.InetAddress,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.net.InetAddress</object>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.net.SocketException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~ (java.net.InetAddress,int,java.net.InetAddress,int) -->
      <constructor access="public" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.InetAddress</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.net.InetAddress</object>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,int,boolean) -->
      <constructor access="public" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.net.InetAddress,int,boolean) -->
      <constructor access="public" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.InetAddress</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ bind -->
      <method access="public" name="bind">
        <signature>
          <arg nr="1">
            <object>java.net.SocketAddress</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ close -->
      <method access="public" name="close">
        <signature/>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <remove>
              <this/>
            </remove>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ connect -->
      <method access="public" name="connect">
        <signature>
          <arg nr="1">
            <object>java.net.SocketAddress</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.nio.channels.IllegalBlockingModeException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ connect -->
      <method access="public" name="connect">
        <signature>
          <arg nr="1">
            <object>java.net.SocketAddress</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.nio.channels.IllegalBlockingModeException</throws>
          <throws>java.net.SocketTimeoutException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getChannel -->
      <method access="public" name="getChannel" valid="no">
        <signature>
          <return>
            <object>java.nio.channels.SocketChannel</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInetAddress -->
      <method access="public" name="getInetAddress">
        <signature>
          <return>
            <object>java.net.InetAddress</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInputStream -->
      <method access="public" name="getInputStream">
        <signature>
          <return>
            <object>java.io.InputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <this/>
            </defput>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeepAlive -->
      <method access="public" name="getKeepAlive">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLocalAddress -->
      <method access="public" name="getLocalAddress">
        <signature>
          <return>
            <object>java.net.InetAddress</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLocalPort -->
      <method access="public" name="getLocalPort">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLocalSocketAddress -->
      <method access="public" name="getLocalSocketAddress">
        <signature>
          <return>
            <object>java.net.SocketAddress</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getOOBInline -->
      <method access="public" name="getOOBInline">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getOutputStream -->
      <method access="public" name="getOutputStream">
        <signature>
          <return>
            <object>java.io.OutputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <remove>
              <return/>
            </remove>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPort -->
      <method access="public" name="getPort">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getReceiveBufferSize -->
      <method access="public" name="getReceiveBufferSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRemoteSocketAddress -->
      <method access="public" name="getRemoteSocketAddress">
        <signature>
          <return>
            <object>java.net.SocketAddress</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getReuseAddress -->
      <method access="public" name="getReuseAddress">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSendBufferSize -->
      <method access="public" name="getSendBufferSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSoLinger -->
      <method access="public" name="getSoLinger">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSoTimeout -->
      <method access="public" name="getSoTimeout">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTcpNoDelay -->
      <method access="public" name="getTcpNoDelay">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTrafficClass -->
      <method access="public" name="getTrafficClass">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isBound -->
      <method access="public" name="isBound" valid="no">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isClosed -->
      <method access="public" name="isClosed">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isConnected -->
      <method access="public" name="isConnected">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isInputShutdown -->
      <method access="public" name="isInputShutdown">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isOutputShutdown -->
      <method access="public" name="isOutputShutdown">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sendUrgentData -->
      <method access="public" name="sendUrgentData" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setKeepAlive -->
      <method access="public" name="setKeepAlive">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setOOBInline -->
      <method access="public" name="setOOBInline">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setPerformancePreferences -->
      <method access="public" name="setPerformancePreferences" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setReceiveBufferSize -->
      <method access="public" name="setReceiveBufferSize">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setReuseAddress -->
      <method access="public" name="setReuseAddress">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setSendBufferSize -->
      <method access="public" name="setSendBufferSize">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setSoLinger -->
      <method access="public" name="setSoLinger">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setSoTimeout -->
      <method access="public" name="setSoTimeout">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setSocketImplFactory -->
      <method access="public" name="setSocketImplFactory" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.SocketImplFactory</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTcpNoDelay -->
      <method access="public" name="setTcpNoDelay">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTrafficClass -->
      <method access="public" name="setTrafficClass">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.net.SocketException</throws>
          <throws>java.net.SocketException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shutdownInput -->
      <method access="public" name="shutdownInput">
        <signature/>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shutdownOutput -->
      <method access="public" name="shutdownOutput">
        <signature/>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
