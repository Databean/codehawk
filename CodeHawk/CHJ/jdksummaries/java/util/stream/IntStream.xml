<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="interface" time="2020-03-17 23:21:13"/>
  <interface name="IntStream" package="java.util.stream">
    <superinterfaces>
      <superinterface>java.util.stream.BaseStream</superinterface>
      <superinterface>java.lang.AutoCloseable</superinterface>
    </superinterfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ allMatch -->
      <method abstract="yes" access="public" name="allMatch" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntPredicate</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ anyMatch -->
      <method abstract="yes" access="public" name="anyMatch" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntPredicate</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ asDoubleStream -->
      <method abstract="yes" access="public" name="asDoubleStream" valid="no">
        <signature>
          <return>
            <object>java.util.stream.DoubleStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ asLongStream -->
      <method abstract="yes" access="public" name="asLongStream" valid="no">
        <signature>
          <return>
            <object>java.util.stream.LongStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ average -->
      <method abstract="yes" access="public" name="average" valid="no">
        <signature>
          <return>
            <object>java.util.OptionalDouble</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ boxed -->
      <method abstract="yes" access="public" name="boxed" valid="no">
        <signature>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ builder -->
      <method access="public" name="builder" static="yes" valid="no">
        <signature>
          <return>
            <object>java.util.stream.IntStream$Builder</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ collect -->
      <method abstract="yes" access="public" name="collect" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Supplier</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.ObjIntConsumer</object>
          </arg>
          <arg nr="3">
            <object>java.util.function.BiConsumer</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ concat -->
      <method access="public" name="concat" static="yes">
        <signature>
          <arg nr="1">
            <object>java.util.stream.IntStream</object>
          </arg>
          <arg nr="2">
            <object>java.util.stream.IntStream</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <var nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ count -->
      <method abstract="yes" access="public" name="count" valid="no">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ distinct -->
      <method abstract="yes" access="public" name="distinct" valid="no">
        <signature>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ empty -->
      <method access="public" name="empty" static="yes">
        <signature>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ filter -->
      <method abstract="yes" access="public" name="filter" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntPredicate</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findAny -->
      <method abstract="yes" access="public" name="findAny" valid="no">
        <signature>
          <return>
            <object>java.util.OptionalInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findFirst -->
      <method abstract="yes" access="public" name="findFirst" valid="no">
        <signature>
          <return>
            <object>java.util.OptionalInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flatMap -->
      <method abstract="yes" access="public" name="flatMap" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntFunction</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEach -->
      <method abstract="yes" access="public" name="forEach" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntConsumer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEachOrdered -->
      <method abstract="yes" access="public" name="forEachOrdered" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntConsumer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ generate -->
      <method access="public" name="generate" static="yes">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntSupplier</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ iterate -->
      <method access="public" name="iterate" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.function.IntUnaryOperator</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ iterator -->
      <method abstract="yes" access="public" name="iterator" valid="no">
        <signature>
          <return>
            <object>java.util.PrimitiveIterator$OfInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ iterator -->
      <method access="public" bridge="yes" name="iterator">
        <signature>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ limit -->
      <method abstract="yes" access="public" name="limit" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ map -->
      <method abstract="yes" access="public" name="map" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntUnaryOperator</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mapToDouble -->
      <method abstract="yes" access="public" name="mapToDouble" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntToDoubleFunction</object>
          </arg>
          <return>
            <object>java.util.stream.DoubleStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mapToLong -->
      <method abstract="yes" access="public" name="mapToLong" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntToLongFunction</object>
          </arg>
          <return>
            <object>java.util.stream.LongStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mapToObj -->
      <method abstract="yes" access="public" name="mapToObj">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntFunction</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ max -->
      <method abstract="yes" access="public" name="max">
        <signature>
          <return>
            <object>java.util.OptionalInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ min -->
      <method abstract="yes" access="public" name="min">
        <signature>
          <return>
            <object>java.util.OptionalInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ noneMatch -->
      <method abstract="yes" access="public" name="noneMatch" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntPredicate</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ of -->
      <method access="public" name="of" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ of -->
      <method access="public" name="of" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ parallel -->
      <method abstract="yes" access="public" name="parallel" valid="no">
        <signature>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ parallel -->
      <method access="public" bridge="yes" name="parallel" valid="no">
        <signature>
          <return>
            <object>java.util.stream.BaseStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ peek -->
      <method abstract="yes" access="public" name="peek" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntConsumer</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ range -->
      <method access="public" name="range" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ rangeClosed -->
      <method access="public" name="rangeClosed" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reduce -->
      <method abstract="yes" access="public" name="reduce" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.function.IntBinaryOperator</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reduce -->
      <method abstract="yes" access="public" name="reduce" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntBinaryOperator</object>
          </arg>
          <return>
            <object>java.util.OptionalInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sequential -->
      <method abstract="yes" access="public" name="sequential" valid="no">
        <signature>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sequential -->
      <method access="public" bridge="yes" name="sequential">
        <signature>
          <return>
            <object>java.util.stream.BaseStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skip -->
      <method abstract="yes" access="public" name="skip" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sorted -->
      <method abstract="yes" access="public" name="sorted" valid="no">
        <signature>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ spliterator -->
      <method abstract="yes" access="public" name="spliterator" valid="no">
        <signature>
          <return>
            <object>java.util.Spliterator$OfInt</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ spliterator -->
      <method access="public" bridge="yes" name="spliterator">
        <signature>
          <return>
            <object>java.util.Spliterator</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sum -->
      <method abstract="yes" access="public" name="sum" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ summaryStatistics -->
      <method abstract="yes" access="public" name="summaryStatistics" valid="no">
        <signature>
          <return>
            <object>java.util.IntSummaryStatistics</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toArray -->
      <method abstract="yes" access="public" name="toArray" valid="no">
        <signature>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
    </methods>
  </interface>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
