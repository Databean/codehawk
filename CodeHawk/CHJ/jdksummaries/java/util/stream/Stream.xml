<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="interface" time="2020-03-17 23:21:23"/>
  <interface name="Stream" package="java.util.stream">
    <superinterfaces>
      <superinterface>java.util.stream.BaseStream</superinterface>
      <superinterface>java.lang.AutoCloseable</superinterface>
    </superinterfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ allMatch -->
      <method abstract="yes" access="public" name="allMatch" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Predicate</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ anyMatch -->
      <method abstract="yes" access="public" name="anyMatch">
        <signature>
          <arg nr="1">
            <object>java.util.function.Predicate</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ builder -->
      <method access="public" name="builder" static="yes">
        <signature>
          <return>
            <object>java.util.stream.Stream$Builder</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ collect -->
      <method abstract="yes" access="public" name="collect" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Supplier</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.BiConsumer</object>
          </arg>
          <arg nr="3">
            <object>java.util.function.BiConsumer</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ collect -->
      <method abstract="yes" access="public" name="collect">
        <signature>
          <arg nr="1">
            <object>java.util.stream.Collector</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ concat -->
      <method access="public" name="concat" static="yes">
        <signature>
          <arg nr="1">
            <object>java.util.stream.Stream</object>
          </arg>
          <arg nr="2">
            <object>java.util.stream.Stream</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <var nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ count -->
      <method abstract="yes" access="public" name="count" valid="no">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ distinct -->
      <method abstract="yes" access="public" name="distinct" valid="no">
        <signature>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ empty -->
      <method access="public" name="empty" static="yes">
        <signature>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ filter -->
      <method abstract="yes" access="public" name="filter">
        <signature>
          <arg nr="1">
            <object>java.util.function.Predicate</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findAny -->
      <method abstract="yes" access="public" name="findAny" valid="no">
        <signature>
          <return>
            <object>java.util.Optional</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findFirst -->
      <method abstract="yes" access="public" name="findFirst" valid="no">
        <signature>
          <return>
            <object>java.util.Optional</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flatMap -->
      <method abstract="yes" access="public" name="flatMap">
        <signature>
          <arg nr="1">
            <object>java.util.function.Function</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flatMapToDouble -->
      <method abstract="yes" access="public" name="flatMapToDouble" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Function</object>
          </arg>
          <return>
            <object>java.util.stream.DoubleStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flatMapToInt -->
      <method abstract="yes" access="public" name="flatMapToInt" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Function</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flatMapToLong -->
      <method abstract="yes" access="public" name="flatMapToLong" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Function</object>
          </arg>
          <return>
            <object>java.util.stream.LongStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEach -->
      <method abstract="yes" access="public" name="forEach">
        <signature>
          <arg nr="1">
            <object>java.util.function.Consumer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEachOrdered -->
      <method abstract="yes" access="public" name="forEachOrdered" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Consumer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ generate -->
      <method access="public" name="generate" static="yes">
        <signature>
          <arg nr="1">
            <object>java.util.function.Supplier</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ iterate -->
      <method access="public" name="iterate" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.UnaryOperator</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ limit -->
      <method abstract="yes" access="public" name="limit" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ map -->
      <method abstract="yes" access="public" name="map">
        <signature>
          <arg nr="1">
            <object>java.util.function.Function</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mapToDouble -->
      <method abstract="yes" access="public" name="mapToDouble" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.ToDoubleFunction</object>
          </arg>
          <return>
            <object>java.util.stream.DoubleStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mapToInt -->
      <method abstract="yes" access="public" name="mapToInt" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.ToIntFunction</object>
          </arg>
          <return>
            <object>java.util.stream.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mapToLong -->
      <method abstract="yes" access="public" name="mapToLong">
        <signature>
          <arg nr="1">
            <object>java.util.function.ToLongFunction</object>
          </arg>
          <return>
            <object>java.util.stream.LongStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ max -->
      <method abstract="yes" access="public" name="max" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Comparator</object>
          </arg>
          <return>
            <object>java.util.Optional</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ min -->
      <method abstract="yes" access="public" name="min" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Comparator</object>
          </arg>
          <return>
            <object>java.util.Optional</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ noneMatch -->
      <method abstract="yes" access="public" name="noneMatch">
        <signature>
          <arg nr="1">
            <object>java.util.function.Predicate</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ of -->
      <method access="public" name="of" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ of -->
      <method access="public" name="of" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ peek -->
      <method abstract="yes" access="public" name="peek" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.Consumer</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reduce -->
      <method abstract="yes" access="public" name="reduce" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.BinaryOperator</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reduce -->
      <method abstract="yes" access="public" name="reduce" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.BinaryOperator</object>
          </arg>
          <return>
            <object>java.util.Optional</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reduce -->
      <method abstract="yes" access="public" name="reduce" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.BiFunction</object>
          </arg>
          <arg nr="3">
            <object>java.util.function.BinaryOperator</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skip -->
      <method abstract="yes" access="public" name="skip" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sorted -->
      <method abstract="yes" access="public" name="sorted">
        <signature>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sorted -->
      <method abstract="yes" access="public" name="sorted">
        <signature>
          <arg nr="1">
            <object>java.util.Comparator</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toArray -->
      <method abstract="yes" access="public" name="toArray" valid="no">
        <signature>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toArray -->
      <method abstract="yes" access="public" name="toArray" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.IntFunction</object>
          </arg>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
    </methods>
  </interface>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
