<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-17 23:18:55"/>
  <class name="ScheduledThreadPoolExecutor" package="java.util.concurrent">
    <superclass>java.util.concurrent.ThreadPoolExecutor</superclass>
    <interfaces>
      <implements>java.util.concurrent.ScheduledExecutorService</implements>
      <implements>java.util.concurrent.ExecutorService</implements>
      <implements>java.util.concurrent.Executor</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="1" form="threads" type="resource"/>
          </sinks>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int,java.util.concurrent.ThreadFactory) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.ThreadFactory</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="1" form="threads" type="resource"/>
          </sinks>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~ (int,java.util.concurrent.RejectedExecutionHandler) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.RejectedExecutionHandler</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="1" form="threads" type="resource"/>
          </sinks>
        </summary>
      </constructor>
      <!--  (int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler) -->
      <constructor access="public" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.ThreadFactory</object>
          </arg>
          <arg nr="3">
            <object>java.util.concurrent.RejectedExecutionHandler</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decorateTask -->
      <method access="protected" name="decorateTask">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.RunnableScheduledFuture</object>
          </arg>
          <return>
            <object>java.util.concurrent.RunnableScheduledFuture</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <return/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <arg nr="2"/>
                  <return/>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decorateTask -->
      <method access="protected" name="decorateTask">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.Callable</object>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.RunnableScheduledFuture</object>
          </arg>
          <return>
            <object>java.util.concurrent.RunnableScheduledFuture</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <return/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <arg nr="2"/>
                  <return/>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ execute -->
      <method access="public" name="execute">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.util.concurrent.RejectedExecutionException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~ getContinueExistingPeriodicTasksAfterShutdownPolicy -->
      <method access="public" name="getContinueExistingPeriodicTasksAfterShutdownPolicy">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~ getExecuteExistingDelayedTasksAfterShutdownPolicy -->
      <method access="public" name="getExecuteExistingDelayedTasksAfterShutdownPolicy" valid="no">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getQueue -->
      <method access="public" name="getQueue" valid="no">
        <signature>
          <return>
            <object>java.util.concurrent.BlockingQueue</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRemoveOnCancelPolicy -->
      <method access="public" name="getRemoveOnCancelPolicy" valid="no">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ schedule -->
      <method access="public" name="schedule">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <object>java.util.concurrent.ScheduledFuture</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ schedule -->
      <method access="public" name="schedule">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.Callable</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <object>java.util.concurrent.ScheduledFuture</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ scheduleAtFixedRate -->
      <method access="public" name="scheduleAtFixedRate">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <long/>
          </arg>
          <arg nr="4">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <object>java.util.concurrent.ScheduledFuture</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.util.concurrent.RejectedExecutionException</throws>
          <throws>java.lang.NullPointerException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="3"/>
                  <cn>1</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ scheduleWithFixedDelay -->
      <method access="public" name="scheduleWithFixedDelay">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <long/>
          </arg>
          <arg nr="4">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <object>java.util.concurrent.ScheduledFuture</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.util.concurrent.RejectedExecutionException</throws>
          <throws>java.lang.NullPointerException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="3"/>
                  <cn>1</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~ setContinueExistingPeriodicTasksAfterShutdownPolicy -->
      <method access="public" name="setContinueExistingPeriodicTasksAfterShutdownPolicy">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~ setExecuteExistingDelayedTasksAfterShutdownPolicy -->
      <method access="public" name="setExecuteExistingDelayedTasksAfterShutdownPolicy">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setRemoveOnCancelPolicy -->
      <method access="public" name="setRemoveOnCancelPolicy" valid="no">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shutdown -->
      <method access="public" name="shutdown">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shutdownNow -->
      <method access="public" name="shutdownNow">
        <signature>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ submit -->
      <method access="public" name="submit">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <return>
            <object>java.util.concurrent.Future</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.util.concurrent.RejectedExecutionException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ submit -->
      <method access="public" name="submit">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.util.concurrent.Future</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.util.concurrent.RejectedExecutionException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ submit -->
      <method access="public" name="submit">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.Callable</object>
          </arg>
          <return>
            <object>java.util.concurrent.Future</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.util.concurrent.RejectedExecutionException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) afterExecute -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="afterExecute">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Throwable</object>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) allowCoreThreadTimeOut -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="allowCoreThreadTimeOut">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) allowsCoreThreadTimeOut -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="allowsCoreThreadTimeOut">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) awaitTermination -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="awaitTermination">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) beforeExecute -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="beforeExecute">
        <signature>
          <arg nr="1">
            <object>java.lang.Thread</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Runnable</object>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getActiveCount -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getActiveCount">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getCompletedTaskCount -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getCompletedTaskCount">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getCorePoolSize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getCorePoolSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getKeepAliveTime -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getKeepAliveTime">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getLargestPoolSize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getLargestPoolSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getMaximumPoolSize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getMaximumPoolSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getPoolSize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getPoolSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getRejectedExecutionHandler -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getRejectedExecutionHandler">
        <signature>
          <return>
            <object>java.util.concurrent.RejectedExecutionHandler</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getTaskCount -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getTaskCount">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getThreadFactory -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="getThreadFactory">
        <signature>
          <return>
            <object>java.util.concurrent.ThreadFactory</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) invokeAll -->
      <method from="java.util.concurrent.AbstractExecutorService" inherited="yes" name="invokeAll">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) invokeAll -->
      <method from="java.util.concurrent.AbstractExecutorService" inherited="yes" name="invokeAll">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) invokeAny -->
      <method from="java.util.concurrent.AbstractExecutorService" inherited="yes" name="invokeAny">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) invokeAny -->
      <method from="java.util.concurrent.AbstractExecutorService" inherited="yes" name="invokeAny">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) isShutdown -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="isShutdown">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) isTerminated -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="isTerminated">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) isTerminating -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="isTerminating">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) newTaskFor -->
      <method from="java.util.concurrent.AbstractExecutorService" inherited="yes" name="newTaskFor">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.Callable</object>
          </arg>
          <return>
            <object>java.util.concurrent.RunnableFuture</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) newTaskFor -->
      <method from="java.util.concurrent.AbstractExecutorService" inherited="yes" name="newTaskFor">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.util.concurrent.RunnableFuture</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) prestartAllCoreThreads -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="prestartAllCoreThreads">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) prestartCoreThread -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="prestartCoreThread">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) purge -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="purge">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) remove -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="remove">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) setCorePoolSize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="setCorePoolSize">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) setKeepAliveTime -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="setKeepAliveTime">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) setMaximumPoolSize -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="setMaximumPoolSize">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) setRejectedExecutionHandler -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="setRejectedExecutionHandler">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.RejectedExecutionHandler</object>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) setThreadFactory -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="setThreadFactory">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.ThreadFactory</object>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) terminated -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="terminated">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.util.concurrent.ThreadPoolExecutor" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
