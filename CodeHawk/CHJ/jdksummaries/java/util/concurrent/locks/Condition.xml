<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="interface" time="2020-03-19 21:22:40"/>
  <interface name="Condition" package="java.util.concurrent.locks">
    <superinterfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ await -->
      <method abstract="yes" access="public" name="await">
        <signature/>
        <exceptions>
          <throws>java.lang.IllegalMonitorStateException</throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ await -->
      <method abstract="yes" access="public" name="await" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <object>java.util.concurrent.TimeUnit</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ awaitNanos -->
      <method abstract="yes" access="public" name="awaitNanos">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalMonitorStateException</throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ awaitUninterruptibly -->
      <method abstract="yes" access="public" name="awaitUninterruptibly" valid="no">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ awaitUntil -->
      <method abstract="yes" access="public" name="awaitUntil" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Date</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ signal -->
      <method abstract="yes" access="public" name="signal">
        <signature/>
        <exceptions>
          <throws>java.lang.IllegalMonitorStateException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ signalAll -->
      <method abstract="yes" access="public" name="signalAll">
        <signature/>
        <exceptions>
          <throws>java.lang.IllegalMonitorStateException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
    </methods>
  </interface>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
