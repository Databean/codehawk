<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-12 16:30:10"/>
  <class final="yes" name="Files" package="java.nio.file">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copy -->
      <method access="public" name="copy" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.CopyOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.nio.file.DirectoryNotEmptyException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <arg nr="2"/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <arg nr="2"/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copy -->
      <method access="public" name="copy" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.CopyOption</object>
            </array>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.nio.file.DirectoryNotEmptyException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copy -->
      <method access="public" name="copy" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.io.OutputStream</object>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createDirectories -->
      <method access="public" name="createDirectories" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createDirectory -->
      <method access="public" name="createDirectory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createFile -->
      <method access="public" name="createFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createLink -->
      <method access="public" name="createLink" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createSymbolicLink -->
      <method access="public" name="createSymbolicLink" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createTempDirectory -->
      <method access="public" name="createTempDirectory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="2" dest="file creation" form="filename" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createTempDirectory -->
      <method access="public" name="createTempDirectory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="file creation" form="filename" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createTempFile -->
      <method access="public" name="createTempFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
          <arg nr="4">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="3" dest="file creation" form="file-extension" type="string"/>
            <sink arg="2" dest="file creation" form="filename" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createTempFile -->
      <method access="public" name="createTempFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="2" dest="file creation" form="file-extension" type="string"/>
            <sink arg="1" dest="file creation" form="filename" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ delete -->
      <method access="public" name="delete" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.NoSuchFileException</throws>
          <throws>java.nio.file.DirectoryNotEmptyException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ deleteIfExists -->
      <method access="public" name="deleteIfExists" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.DirectoryNotEmptyException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ exists -->
      <method access="public" name="exists" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ find -->
      <method access="public" name="find" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.util.function.BiPredicate</object>
          </arg>
          <arg nr="4">
            <array>
              <object>java.nio.file.FileVisitOption</object>
            </array>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAttribute -->
      <method access="public" name="getAttribute" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="2" dest="file-query" form="file-attribute" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getFileAttributeView -->
      <method access="public" name="getFileAttributeView" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.attribute.FileAttributeView</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getFileStore -->
      <method access="public" name="getFileStore" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.nio.file.FileStore</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLastModifiedTime -->
      <method access="public" name="getLastModifiedTime" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.attribute.FileTime</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getOwner -->
      <method access="public" name="getOwner" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.attribute.UserPrincipal</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPosixFilePermissions -->
      <method access="public" name="getPosixFilePermissions" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.util.Set</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isDirectory -->
      <method access="public" name="isDirectory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isExecutable -->
      <method access="public" name="isExecutable" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isHidden -->
      <method access="public" name="isHidden" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isReadable -->
      <method access="public" name="isReadable" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isRegularFile -->
      <method access="public" name="isRegularFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isSameFile -->
      <method access="public" name="isSameFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isSymbolicLink -->
      <method access="public" name="isSymbolicLink" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isWritable -->
      <method access="public" name="isWritable" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lines -->
      <method access="public" name="lines" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.charset.Charset</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
	  <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
	    <defput>
	      <return/>
	    </defput>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lines -->
      <method access="public" name="lines" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
	  <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
	    <defput>
	      <return/>
	    </defput>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ list -->
      <method access="public" name="list" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions>
	  <throws>java.nio.file.NotDirectoryException</throws>
          <throws>java.io.IOException</throws>
	  <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
	    <defput>
	      <return/>
	    </defput>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ move -->
      <method access="public" name="move" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.CopyOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.nio.file.DirectoryNotEmptyException</throws>
          <throws>java.nio.file.AtomicMoveNotSupportedException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <arg nr="2"/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <arg nr="2"/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newBufferedReader -->
      <method access="public" name="newBufferedReader" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.charset.Charset</object>
          </arg>
          <return>
            <object>java.io.BufferedReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newBufferedReader -->
      <method access="public" name="newBufferedReader" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.io.BufferedReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newBufferedWriter -->
      <method access="public" name="newBufferedWriter" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.charset.Charset</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.io.BufferedWriter</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newBufferedWriter -->
      <method access="public" name="newBufferedWriter" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.io.BufferedWriter</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newByteChannel -->
      <method access="public" name="newByteChannel" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.util.Set</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.attribute.FileAttribute</object>
            </array>
          </arg>
          <return>
            <object>java.nio.channels.SeekableByteChannel</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newByteChannel -->
      <method access="public" name="newByteChannel" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.channels.SeekableByteChannel</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.nio.file.FileAlreadyExistsException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newDirectoryStream -->
      <method access="public" name="newDirectoryStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.nio.file.DirectoryStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.NotDirectoryException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newDirectoryStream -->
      <method access="public" name="newDirectoryStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.nio.file.DirectoryStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.util.regex.PatternSyntaxException</throws>
          <throws>java.nio.file.NotDirectoryException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="2" dest="file-directory" form="globbing-pattern" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newDirectoryStream -->
      <method access="public" name="newDirectoryStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.DirectoryStream$Filter</object>
          </arg>
          <return>
            <object>java.nio.file.DirectoryStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.nio.file.NotDirectoryException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInputStream -->
      <method access="public" name="newInputStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.io.InputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newOutputStream -->
      <method access="public" name="newOutputStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.io.OutputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ notExists -->
      <method access="public" name="notExists" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ probeContentType -->
      <method access="public" name="probeContentType" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readAllBytes -->
      <method access="public" name="readAllBytes" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.OutOfMemoryError</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readAllLines -->
      <method access="public" name="readAllLines" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.charset.Charset</object>
          </arg>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readAllLines -->
      <method access="public" name="readAllLines" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readAttributes -->
      <method access="public" name="readAttributes" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.attribute.BasicFileAttributes</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readAttributes -->
      <method access="public" name="readAttributes" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.util.Map</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readSymbolicLink -->
      <method access="public" name="readSymbolicLink" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setAttribute -->
      <method access="public" name="setAttribute" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <array>
              <object>java.nio.file.LinkOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setLastModifiedTime -->
      <method access="public" name="setLastModifiedTime" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.attribute.FileTime</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setOwner -->
      <method access="public" name="setOwner" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.attribute.UserPrincipal</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setPosixFilePermissions -->
      <method access="public" name="setPosixFilePermissions" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.util.Set</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method access="public" name="size" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ walk -->
      <method access="public" name="walk" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.FileVisitOption</object>
            </array>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ walk -->
      <method access="public" name="walk" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.nio.file.FileVisitOption</object>
            </array>
          </arg>
          <return>
            <object>java.util.stream.Stream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ walkFileTree -->
      <method access="public" name="walkFileTree" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.util.Set</object>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <object>java.nio.file.FileVisitor</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <arg nr="4"/>
            </defput>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ walkFileTree -->
      <method access="public" name="walkFileTree" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.nio.file.FileVisitor</object>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <arg nr="2"/>
            </defput>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="2"/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Iterable</object>
          </arg>
          <arg nr="3">
            <object>java.nio.charset.Charset</object>
          </arg>
          <arg nr="4">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="2"/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.file.Path</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Iterable</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.nio.file.OpenOption</object>
            </array>
          </arg>
          <return>
            <object>java.nio.file.Path</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
