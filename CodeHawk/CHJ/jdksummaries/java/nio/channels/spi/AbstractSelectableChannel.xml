<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-17 23:05:52"/>
  <class abstract="yes" name="AbstractSelectableChannel" package="java.nio.channels.spi">
    <superclass>java.nio.channels.SelectableChannel</superclass>
    <interfaces>
      <implements>java.nio.channels.Channel</implements>
      <implements>java.nio.channels.InterruptibleChannel</implements>
      <implements>java.io.Closeable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.nio.channels.spi.SelectorProvider) -->
      <constructor access="protected">
        <signature>
          <arg nr="1">
            <object>java.nio.channels.spi.SelectorProvider</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ blockingLock -->
      <method access="public" final="yes" name="blockingLock" valid="no">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ configureBlocking -->
      <method access="public" final="yes" name="configureBlocking">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <return>
            <object>java.nio.channels.SelectableChannel</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.nio.channels.ClosedChannelException</throws>
          <throws>java.nio.channels.IllegalBlockingModeException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implCloseChannel -->
      <method access="protected" final="yes" name="implCloseChannel">
        <signature/>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implCloseSelectableChannel -->
      <method abstract="yes" access="protected" name="implCloseSelectableChannel" valid="no">
        <signature/>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implConfigureBlocking -->
      <method abstract="yes" access="protected" name="implConfigureBlocking" valid="no">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isBlocking -->
      <method access="public" final="yes" name="isBlocking">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isRegistered -->
      <method access="public" final="yes" name="isRegistered">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ keyFor -->
      <method access="public" final="yes" name="keyFor">
        <signature>
          <arg nr="1">
            <object>java.nio.channels.Selector</object>
          </arg>
          <return>
            <object>java.nio.channels.SelectionKey</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ provider -->
      <method access="public" final="yes" name="provider" valid="no">
        <signature>
          <return>
            <object>java.nio.channels.spi.SelectorProvider</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ register -->
      <method access="public" final="yes" name="register">
        <signature>
          <arg nr="1">
            <object>java.nio.channels.Selector</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.nio.channels.SelectionKey</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.nio.channels.ClosedSelectorException</throws>
          <throws>java.nio.channels.IllegalBlockingModeException</throws>
          <throws>java.nio.channels.IllegalSelectorException</throws>
          <throws>java.nio.channels.CancelledKeyException</throws>
          <throws>java.nio.channels.ClosedChannelException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) begin -->
      <method from="java.nio.channels.spi.AbstractInterruptibleChannel" inherited="yes" name="begin">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) close -->
      <method from="java.nio.channels.spi.AbstractInterruptibleChannel" inherited="yes" name="close">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) end -->
      <method from="java.nio.channels.spi.AbstractInterruptibleChannel" inherited="yes" name="end">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) isOpen -->
      <method from="java.nio.channels.spi.AbstractInterruptibleChannel" inherited="yes" name="isOpen">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) register -->
      <method from="java.nio.channels.SelectableChannel" inherited="yes" name="register">
        <signature>
          <arg nr="1">
            <object>java.nio.channels.Selector</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.nio.channels.SelectionKey</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) validOps -->
      <method from="java.nio.channels.SelectableChannel" inherited="yes" name="validOps">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
