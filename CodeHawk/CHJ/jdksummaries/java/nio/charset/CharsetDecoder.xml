<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-17 23:26:30"/>
  <class abstract="yes" name="CharsetDecoder" package="java.nio.charset">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.nio.charset.Charset,float,float) -->
      <constructor access="protected">
        <signature>
          <arg nr="1">
            <object>java.nio.charset.Charset</object>
          </arg>
          <arg nr="2">
            <float/>
          </arg>
          <arg nr="3">
            <float/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ averageCharsPerByte -->
      <method access="public" final="yes" name="averageCharsPerByte">
        <signature>
          <return>
            <float/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ charset -->
      <method access="public" final="yes" name="charset">
        <signature>
          <return>
            <object>java.nio.charset.Charset</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decode -->
      <method access="public" final="yes" name="decode">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <arg nr="2">
            <object>java.nio.CharBuffer</object>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <return>
            <object>java.nio.charset.CoderResult</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
          <throws>java.nio.charset.CoderMalfunctionError</throws>
          <throws>java.lang.NullPointerException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decode -->
      <method access="public" final="yes" name="decode">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <return>
            <object>java.nio.CharBuffer</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
          <throws>java.nio.charset.MalformedInputException</throws>
          <throws>java.nio.charset.UnmappableCharacterException</throws>
          <throws>java.nio.charset.CharacterCodingException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decodeLoop -->
      <method abstract="yes" access="protected" name="decodeLoop" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <arg nr="2">
            <object>java.nio.CharBuffer</object>
          </arg>
          <return>
            <object>java.nio.charset.CoderResult</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ detectedCharset -->
      <method access="public" name="detectedCharset" valid="no">
        <signature>
          <return>
            <object>java.nio.charset.Charset</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flush -->
      <method access="public" final="yes" name="flush">
        <signature>
          <arg nr="1">
            <object>java.nio.CharBuffer</object>
          </arg>
          <return>
            <object>java.nio.charset.CoderResult</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implFlush -->
      <method access="protected" name="implFlush" valid="no">
        <signature>
          <arg nr="1">
            <object>java.nio.CharBuffer</object>
          </arg>
          <return>
            <object>java.nio.charset.CoderResult</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implOnMalformedInput -->
      <method access="protected" name="implOnMalformedInput">
        <signature>
          <arg nr="1">
            <object>java.nio.charset.CodingErrorAction</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implOnUnmappableCharacter -->
      <method access="protected" name="implOnUnmappableCharacter">
        <signature>
          <arg nr="1">
            <object>java.nio.charset.CodingErrorAction</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implReplaceWith -->
      <method access="protected" name="implReplaceWith">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implReset -->
      <method access="protected" name="implReset">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAutoDetecting -->
      <method access="public" name="isAutoDetecting" valid="no">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isCharsetDetected -->
      <method access="public" name="isCharsetDetected" valid="no">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ malformedInputAction -->
      <method access="public" name="malformedInputAction" valid="no">
        <signature>
          <return>
            <object>java.nio.charset.CodingErrorAction</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ maxCharsPerByte -->
      <method access="public" final="yes" name="maxCharsPerByte">
        <signature>
          <return>
            <float/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ onMalformedInput -->
      <method access="public" final="yes" name="onMalformedInput">
        <signature>
          <arg nr="1">
            <object>java.nio.charset.CodingErrorAction</object>
          </arg>
          <return>
            <object>java.nio.charset.CharsetDecoder</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ onUnmappableCharacter -->
      <method access="public" final="yes" name="onUnmappableCharacter">
        <signature>
          <arg nr="1">
            <object>java.nio.charset.CodingErrorAction</object>
          </arg>
          <return>
            <object>java.nio.charset.CharsetDecoder</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replaceWith -->
      <method access="public" final="yes" name="replaceWith">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.nio.charset.CharsetDecoder</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replacement -->
      <method access="public" final="yes" name="replacement" valid="no">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reset -->
      <method access="public" final="yes" name="reset">
        <signature>
          <return>
            <object>java.nio.charset.CharsetDecoder</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <this/>
                  <return/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unmappableCharacterAction -->
      <method access="public" name="unmappableCharacterAction" valid="no">
        <signature>
          <return>
            <object>java.nio.charset.CodingErrorAction</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
