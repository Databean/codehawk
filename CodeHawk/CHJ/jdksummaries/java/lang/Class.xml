<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-09 21:57:42"/>
  <class final="yes" name="Class" package="java.lang">
    <interfaces>
      <implements>java.io.Serializable</implements>
      <implements>java.lang.reflect.GenericDeclaration</implements>
      <implements>java.lang.reflect.Type</implements>
      <implements>java.lang.reflect.AnnotatedElement</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ asSubclass -->
      <method access="public" name="asSubclass">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ cast -->
      <method access="public" name="cast">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ desiredAssertionStatus -->
      <method access="public" name="desiredAssertionStatus">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forName -->
      <method access="public" name="forName" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.LinkageError</throws>
          <throws>java.lang.ExceptionInInitializerError</throws>
          <throws>java.lang.ClassNotFoundException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="dynamic loading" form="classname" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forName -->
      <method access="public" name="forName" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
          <arg nr="3">
            <object>java.lang.ClassLoader</object>
          </arg>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.LinkageError</throws>
          <throws>java.lang.ExceptionInInitializerError</throws>
          <throws>java.lang.ClassNotFoundException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="dynamic loading" form="classname" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAnnotatedInterfaces -->
      <method access="public" name="getAnnotatedInterfaces">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.AnnotatedType</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAnnotatedSuperclass -->
      <method access="public" name="getAnnotatedSuperclass">
        <signature>
          <return>
            <object>java.lang.reflect.AnnotatedType</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAnnotation -->
      <method access="public" name="getAnnotation">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.annotation.Annotation</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAnnotations -->
      <method access="public" name="getAnnotations">
        <signature>
          <return>
            <array>
              <object>java.lang.annotation.Annotation</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAnnotationsByType -->
      <method access="public" name="getAnnotationsByType">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <array>
              <object>java.lang.annotation.Annotation</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getCanonicalName -->
      <method access="public" name="getCanonicalName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getClassLoader -->
      <method access="public" name="getClassLoader">
        <signature>
          <return>
            <object>java.lang.ClassLoader</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getClasses -->
      <method access="public" name="getClasses">
        <signature>
          <return>
            <array>
              <object>java.lang.Class</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getComponentType -->
      <method access="public" name="getComponentType" native="yes">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getConstructor -->
      <method access="public" name="getConstructor">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <return>
            <object>java.lang.reflect.Constructor</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getConstructors -->
      <method access="public" name="getConstructors">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Constructor</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredAnnotation -->
      <method access="public" name="getDeclaredAnnotation">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.annotation.Annotation</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredAnnotations -->
      <method access="public" name="getDeclaredAnnotations">
        <signature>
          <return>
            <array>
              <object>java.lang.annotation.Annotation</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredAnnotationsByType -->
      <method access="public" name="getDeclaredAnnotationsByType">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <array>
              <object>java.lang.annotation.Annotation</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredClasses -->
      <method access="public" name="getDeclaredClasses">
        <signature>
          <return>
            <array>
              <object>java.lang.Class</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredConstructor -->
      <method access="public" name="getDeclaredConstructor">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <return>
            <object>java.lang.reflect.Constructor</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredConstructors -->
      <method access="public" name="getDeclaredConstructors">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Constructor</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredField -->
      <method access="public" name="getDeclaredField">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.reflect.Field</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchFieldException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredFields -->
      <method access="public" name="getDeclaredFields">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Field</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredMethod -->
      <method access="public" name="getDeclaredMethod">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <return>
            <object>java.lang.reflect.Method</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaredMethods -->
      <method access="public" name="getDeclaredMethods">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Method</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDeclaringClass -->
      <method access="public" name="getDeclaringClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getEnclosingClass -->
      <method access="public" name="getEnclosingClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getEnclosingConstructor -->
      <method access="public" name="getEnclosingConstructor">
        <signature>
          <return>
            <object>java.lang.reflect.Constructor</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getEnclosingMethod -->
      <method access="public" name="getEnclosingMethod">
        <signature>
          <return>
            <object>java.lang.reflect.Method</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getEnumConstants -->
      <method access="public" name="getEnumConstants">
        <signature>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getField -->
      <method access="public" name="getField">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.reflect.Field</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchFieldException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getFields -->
      <method access="public" name="getFields">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Field</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getGenericInterfaces -->
      <method access="public" name="getGenericInterfaces">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Type</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.TypeNotPresentException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getGenericSuperclass -->
      <method access="public" name="getGenericSuperclass">
        <signature>
          <return>
            <object>java.lang.reflect.Type</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.TypeNotPresentException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInterfaces -->
      <method access="public" name="getInterfaces">
        <signature>
          <return>
            <array>
              <object>java.lang.Class</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMethod -->
      <method access="public" name="getMethod">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <return>
            <object>java.lang.reflect.Method</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="reflection" form="method name" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMethods -->
      <method access="public" name="getMethods">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Method</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getModifiers -->
      <method access="public" name="getModifiers" native="yes">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getName -->
      <method access="public" name="getName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPackage -->
      <method access="public" name="getPackage">
        <signature>
          <return>
            <object>java.lang.Package</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getProtectionDomain -->
      <method access="public" name="getProtectionDomain">
        <signature>
          <return>
            <object>java.security.ProtectionDomain</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getResource -->
      <method access="public" name="getResource">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.net.URL</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getResourceAsStream -->
      <method access="public" name="getResourceAsStream">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.io.InputStream</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSigners -->
      <method access="public" name="getSigners" native="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSimpleName -->
      <method access="public" name="getSimpleName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSuperclass -->
      <method access="public" name="getSuperclass" native="yes">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTypeName -->
      <method access="public" name="getTypeName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTypeParameters -->
      <method access="public" name="getTypeParameters">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.TypeVariable</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAnnotation -->
      <method access="public" name="isAnnotation">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAnnotationPresent -->
      <method access="public" name="isAnnotationPresent">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAnonymousClass -->
      <method access="public" name="isAnonymousClass">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isArray -->
      <method access="public" name="isArray" native="yes">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAssignableFrom -->
      <method access="public" name="isAssignableFrom" native="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.NullPointerException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isEnum -->
      <method access="public" name="isEnum">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isInstance -->
      <method access="public" name="isInstance" native="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isInterface -->
      <method access="public" name="isInterface" native="yes">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isLocalClass -->
      <method access="public" name="isLocalClass">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isMemberClass -->
      <method access="public" name="isMemberClass">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isPrimitive -->
      <method access="public" name="isPrimitive" native="yes">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isSynthetic -->
      <method access="public" name="isSynthetic">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.InstantiationException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <throws>java.lang.ExceptionInInitializerError</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toGenericString -->
      <method access="public" name="toGenericString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
