<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="interface" time="2020-04-03 21:33:47"/>
  <interface name="TypeVariable" package="java.lang.reflect">
    <superinterfaces>
      <superinterface>java.lang.reflect.Type</superinterface>
      <superinterface>java.lang.reflect.AnnotatedElement</superinterface>
    </superinterfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAnnotatedBounds -->
      <method abstract="yes" access="public" name="getAnnotatedBounds" valid="no">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.AnnotatedType</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getBounds -->
      <method abstract="yes" access="public" name="getBounds">
        <signature>
          <return>
            <array>
              <object>java.lang.reflect.Type</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.TypeNotPresentException</throws>
          <throws>java.lang.reflect.MalformedParameterizedTypeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getGenericDeclaration -->
      <method abstract="yes" access="public" name="getGenericDeclaration" valid="no">
        <signature>
          <return>
            <object>java.lang.reflect.GenericDeclaration</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getName -->
      <method abstract="yes" access="public" name="getName" valid="no">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
    </methods>
  </interface>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
