<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-04-03 15:36:27"/>
  <class final="yes" name="MethodHandles$Lookup" package="java.lang.invoke">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PUBLIC -->
      <field access="public" final="yes" name="PUBLIC" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="1"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PRIVATE -->
      <field access="public" final="yes" name="PRIVATE" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="2"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PROTECTED -->
      <field access="public" final="yes" name="PROTECTED" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="4"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PACKAGE -->
      <field access="public" final="yes" name="PACKAGE" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="8"/>
        </value>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ bind -->
      <method access="public" name="bind">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="1" dest="dynamic loading" form="method name" type="string">
	      <throws>java.lang.NoSuchMethodException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findConstructor -->
      <method access="public" name="findConstructor">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
	  <transfer>
	    <this/>
	    <return/>
	  </transfer>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findGetter -->
      <method access="public" name="findGetter">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchFieldException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
	<sinks>
	  <sink arg="2" dest="dynamic loading" form="field name" type="string">
	    <throws>java.lang.NoSuchFieldException</throws>
	  </sink>
	</sinks>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findSetter -->
      <method access="public" name="findSetter">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchFieldException</throws>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="2" dest="dynamic loading" form="field name" type="string">
	      <throws>java.lang.NoSuchFieldException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findSpecial -->
      <method access="public" name="findSpecial">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <arg nr="4">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
	    <cnp arg="4"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="2" dest="dynamic loading" form="method name" type="string">
	      <throws>java.lang.NoSuchMethodException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findStatic -->
      <method access="public" name="findStatic">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.SecurityException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="2" dest="dynamic loading" form="method name" type="string">
	      <throws>java.lang.NoSuchMethodException</throws>
	    </sink>
	  </sinks>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findStaticGetter -->
      <method access="public" name="findStaticGetter">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchFieldException</throws>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="2" dest="dynamic loading" form="field name" type="string">
	      <throws>java.lang.NoSuchFieldException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findStaticSetter -->
      <method access="public" name="findStaticSetter">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchFieldException</throws>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="2" dest="dynamic loading" form="field name" type="string">
	      <throws>java.lang.NoSuchFieldException</throws>
	    </sink>
	  </sinks>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ findVirtual -->
      <method access="public" name="findVirtual">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NoSuchMethodException</throws>
          <throws>java.lang.IllegalAccessException</throws>
          <throws>java.lang.SecurityException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
	    <cnp arg="3"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
	  <sinks>
	    <sink arg="2" dest="dynamic loading" form="method name" type="string">
	      <throws>java.lang.NoSuchMethodException</throws>
	    </sink>
	  </sinks>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ in -->
      <method access="public" name="in" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandles$Lookup</object>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <cnp arg="1"/>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lookupClass -->
      <method access="public" name="lookupClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lookupModes -->
      <method access="public" name="lookupModes">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ revealDirect -->
      <method access="public" name="revealDirect">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandleInfo</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unreflect -->
      <method access="public" name="unreflect">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Method</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unreflectConstructor -->
      <method access="public" name="unreflectConstructor">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Constructor</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unreflectGetter -->
      <method access="public" name="unreflectGetter">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Field</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unreflectSetter -->
      <method access="public" name="unreflectSetter">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Field</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unreflectSpecial -->
      <method access="public" name="unreflectSpecial">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Method</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalAccessException</throws>
          <c-throws>
	    <cnp arg="1"/>
	    <cnp arg="2"/>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
