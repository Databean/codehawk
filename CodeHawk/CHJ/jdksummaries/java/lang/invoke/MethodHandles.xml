<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-04-03 15:29:53"/>
  <class name="MethodHandles" package="java.lang.invoke">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ arrayElementGetter -->
      <method access="public" name="arrayElementGetter" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ arrayElementSetter -->
      <method access="public" name="arrayElementSetter" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ catchException -->
      <method access="public" name="catchException" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ collectArguments -->
      <method access="public" name="collectArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ constant -->
      <method access="public" name="constant" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ dropArguments -->
      <method access="public" name="dropArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.util.List</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ dropArguments -->
      <method access="public" name="dropArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ exactInvoker -->
      <method access="public" name="exactInvoker" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ explicitCastArguments -->
      <method access="public" name="explicitCastArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ filterArguments -->
      <method access="public" name="filterArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.invoke.MethodHandle</object>
            </array>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ filterReturnValue -->
      <method access="public" name="filterReturnValue" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ foldArguments -->
      <method access="public" name="foldArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ guardWithTest -->
      <method access="public" name="guardWithTest" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="3">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ identity -->
      <method access="public" name="identity" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ insertArguments -->
      <method access="public" name="insertArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ invoker -->
      <method access="public" name="invoker" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lookup -->
      <method access="public" name="lookup" static="yes">
        <signature>
          <return>
            <object>java.lang.invoke.MethodHandles$Lookup</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ permuteArguments -->
      <method access="public" name="permuteArguments" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ publicLookup -->
      <method access="public" name="publicLookup" static="yes">
        <signature>
          <return>
            <object>java.lang.invoke.MethodHandles$Lookup</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reflectAs -->
      <method access="public" name="reflectAs" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.invoke.MethodHandle</object>
          </arg>
          <return>
            <object>java.lang.reflect.Member</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ spreadInvoker -->
      <method access="public" name="spreadInvoker" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.invoke.MethodType</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ throwException -->
      <method access="public" name="throwException" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.invoke.MethodHandle</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
