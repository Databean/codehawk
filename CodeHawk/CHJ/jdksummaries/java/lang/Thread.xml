<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-09 23:53:41"/>
  <class name="Thread" package="java.lang">
    <interfaces>
      <implements>java.lang.Runnable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MIN_PRIORITY -->
      <field access="public" final="yes" name="MIN_PRIORITY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="1"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:NORM_PRIORITY -->
      <field access="public" final="yes" name="NORM_PRIORITY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="5"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MAX_PRIORITY -->
      <field access="public" final="yes" name="MAX_PRIORITY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="10"/>
        </value>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="public">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.Runnable) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.ThreadGroup,java.lang.Runnable) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.ThreadGroup</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Runnable</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.ThreadGroup,java.lang.String) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.ThreadGroup</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.Runnable,java.lang.String) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~ (java.lang.ThreadGroup,java.lang.Runnable,java.lang.String) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.ThreadGroup</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~ (java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.ThreadGroup</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Runnable</object>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="4" form="memory" type="resource"/>
          </sinks>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ activeCount -->
      <method access="public" name="activeCount" static="yes" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkAccess -->
      <method access="public" final="yes" name="checkAccess">
        <signature/>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clone -->
      <method access="protected" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.CloneNotSupportedException</throws>
          <throws>java.lang.CloneNotSupportedException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ countStackFrames -->
      <method access="public" name="countStackFrames" native="yes" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currentThread -->
      <method access="public" name="currentThread" native="yes" static="yes">
        <signature>
          <return>
            <object>java.lang.Thread</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ destroy -->
      <method access="public" name="destroy" valid="no">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ dumpStack -->
      <method access="public" name="dumpStack" static="yes">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ enumerate -->
      <method access="public" name="enumerate" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Thread</object>
            </array>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="1"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAllStackTraces -->
      <method access="public" name="getAllStackTraces" static="yes">
        <signature>
          <return>
            <object>java.util.Map</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getContextClassLoader -->
      <method access="public" name="getContextClassLoader">
        <signature>
          <return>
            <object>java.lang.ClassLoader</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDefaultUncaughtExceptionHandler -->
      <method access="public" name="getDefaultUncaughtExceptionHandler" static="yes" valid="no">
        <signature>
          <return>
            <object>java.lang.Thread$UncaughtExceptionHandler</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getId -->
      <method access="public" name="getId">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getName -->
      <method access="public" final="yes" name="getName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPriority -->
      <method access="public" final="yes" name="getPriority">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getStackTrace -->
      <method access="public" name="getStackTrace">
        <signature>
          <return>
            <array>
              <object>java.lang.StackTraceElement</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getState -->
      <method access="public" name="getState">
        <signature>
          <return>
            <object>java.lang.Thread$State</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getThreadGroup -->
      <method access="public" final="yes" name="getThreadGroup">
        <signature>
          <return>
            <object>java.lang.ThreadGroup</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUncaughtExceptionHandler -->
      <method access="public" name="getUncaughtExceptionHandler">
        <signature>
          <return>
            <object>java.lang.Thread$UncaughtExceptionHandler</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ holdsLock -->
      <method access="public" name="holdsLock" native="yes" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ interrupt -->
      <method access="public" name="interrupt">
        <signature/>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ interrupted -->
      <method access="public" name="interrupted" static="yes">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAlive -->
      <method access="public" final="yes" name="isAlive" native="yes">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isDaemon -->
      <method access="public" final="yes" name="isDaemon">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isInterrupted -->
      <method access="public" name="isInterrupted">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ join -->
      <method access="public" final="yes" name="join">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.InterruptedException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="1" form="waiting-time" type="resource"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ join -->
      <method access="public" final="yes" name="join">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.InterruptedException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="2"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <safety-condition>
              <math>
                <apply>
                  <leq/>
                  <arg nr="2"/>
                  <cn>999999</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="2" form="waiting-time" type="resource"/>
            <sink arg="1" form="waiting-time" type="resource"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ join -->
      <method access="public" final="yes" name="join">
        <signature/>
        <exceptions>
          <throws>java.lang.InterruptedException</throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ resume -->
      <method access="public" final="yes" name="resume" valid="no">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ run -->
      <method access="public" name="run">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setContextClassLoader -->
      <method access="public" name="setContextClassLoader">
        <signature>
          <arg nr="1">
            <object>java.lang.ClassLoader</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setDaemon -->
      <method access="public" final="yes" name="setDaemon">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalThreadStateException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setDefaultUncaughtExceptionHandler -->
      <method access="public" name="setDefaultUncaughtExceptionHandler" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Thread$UncaughtExceptionHandler</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setName -->
      <method access="public" final="yes" name="setName">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setPriority -->
      <method access="public" final="yes" name="setPriority">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setUncaughtExceptionHandler -->
      <method access="public" name="setUncaughtExceptionHandler">
        <signature>
          <arg nr="1">
            <object>java.lang.Thread$UncaughtExceptionHandler</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sleep -->
      <method access="public" name="sleep" native="yes" static="yes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.InterruptedException</throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint/>
          <sinks>
            <sink arg="1" form="waiting-time" type="resource"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sleep -->
      <method access="public" name="sleep" static="yes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.InterruptedException</throws>
          <throws>java.lang.InterruptedException</throws>
        </exceptions>
        <summary>
          <taint/>
          <sinks>
            <sink arg="2" form="waiting-time" type="resource"/>
            <sink arg="1" form="waiting-time" type="resource"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ start -->
      <method access="public" name="start">
        <signature/>
        <exceptions>
          <throws>java.lang.IllegalThreadStateException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stop -->
      <method access="public" final="yes" name="stop">
        <signature/>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stop -->
      <method access="public" final="yes" name="stop" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Throwable</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ suspend -->
      <method access="public" final="yes" name="suspend" valid="no">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ yield -->
      <method access="public" name="yield" native="yes" static="yes">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
