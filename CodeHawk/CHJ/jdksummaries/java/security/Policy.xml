<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-04-05 15:21:13"/>
  <class abstract="yes" name="Policy" package="java.security">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:UNSUPPORTED_EMPTY_COLLECTION -->
      <field access="public" final="yes" name="UNSUPPORTED_EMPTY_COLLECTION" not-null="yes" static="yes">
        <signature>
          <object>java.security.PermissionCollection</object>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="public">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInstance -->
      <method access="public" name="getInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.security.Policy$Parameters</object>
          </arg>
          <return>
            <object>java.security.Policy</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
	  <throws>java.lang.IllegalArgumentException</throws>
	  <throws>java.lang.SecurityException</throws>
	  <c-throws>
	    <cnp arg="1"/>
	  </c-throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
	  <sinks>
	    <sink arg="1" dest="security" form="policy name" type="string">
	      <throws>java.security.NoSuchAlgorithmException</throws>
	      <throws>java.lang.IllegalArgumentException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInstance -->
      <method access="public" name="getInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.security.Policy$Parameters</object>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.security.Policy</object>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <cnp arg="1"/>
	  </c-throws>
          <throws>java.security.NoSuchProviderException</throws>
          <throws>java.security.NoSuchAlgorithmException</throws>
	  <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
	  <sinks>
	    <sink arg="1" dest="security" form="policy name" type="string">
	      <throws>java.security.NoSuchAlgorithmException</throws>
	      <throws>java.lang.IllegalArgumentException</throws>
	    </sink>
	    <sink  arg="3" dest="security" form="provider name" type="string">
	      <throws>java.security.NoSuchProviderException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInstance -->
      <method access="public" name="getInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.security.Policy$Parameters</object>
          </arg>
          <arg nr="3">
            <object>java.security.Provider</object>
          </arg>
          <return>
            <object>java.security.Policy</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
	  <throws>java.lang.SecurityException</throws>
	  <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
	  <sinks>
	    <sink arg="1" dest="security" form="policy name" type="string">
	      <throws>java.lang.SecurityException<throws>
	      <throws>java.security.NoSuchAlgorithmException</throws>
	      <throws>java.lang.IllegalArgumentException</throws>
	    </sink>
	  </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getParameters -->
      <method access="public" name="getParameters">
        <signature>
          <return>
            <object>java.security.Policy$Parameters</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPermissions -->
      <method access="public" name="getPermissions">
        <signature>
          <arg nr="1">
            <object>java.security.CodeSource</object>
          </arg>
          <return>
            <object>java.security.PermissionCollection</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPermissions -->
      <method access="public" name="getPermissions" valid="no">
        <signature>
          <arg nr="1">
            <object>java.security.ProtectionDomain</object>
          </arg>
          <return>
            <object>java.security.PermissionCollection</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPolicy -->
      <method access="public" name="getPolicy" static="yes">
        <signature>
          <return>
            <object>java.security.Policy</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getProvider -->
      <method access="public" name="getProvider">
        <signature>
          <return>
            <object>java.security.Provider</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getType -->
      <method access="public" name="getType">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implies -->
      <method access="public" name="implies">
        <signature>
          <arg nr="1">
            <object>java.security.ProtectionDomain</object>
          </arg>
          <arg nr="2">
            <object>java.security.Permission</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ refresh -->
      <method access="public" name="refresh">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setPolicy -->
      <method access="public" name="setPolicy" static="yes">
        <signature>
          <arg nr="1">
            <object>java.security.Policy</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
