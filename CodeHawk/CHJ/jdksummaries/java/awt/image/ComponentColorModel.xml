<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-23 13:49:25"/>
  <class name="ComponentColorModel" package="java.awt.image">
    <superclass>java.awt.image.ColorModel</superclass>
    <interfaces>
      <implements>java.awt.Transparency</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~ (java.awt.color.ColorSpace,int[],boolean,boolean,int,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.awt.color.ColorSpace</object>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <arg nr="4">
            <boolean/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <arg nr="6">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="5"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="6"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~ (java.awt.color.ColorSpace,boolean,boolean,int,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.awt.color.ColorSpace</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="5"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ coerceData -->
      <method access="public" name="coerceData">
        <signature>
          <arg nr="1">
            <object>java.awt.image.WritableRaster</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
          <return>
            <object>java.awt.image.ColorModel</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createCompatibleSampleModel -->
      <method access="public" name="createCompatibleSampleModel" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.awt.image.SampleModel</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createCompatibleWritableRaster -->
      <method access="public" name="createCompatibleWritableRaster">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.awt.image.WritableRaster</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>1</cn>
                </apply>
              </math>
            </safety-condition>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="2"/>
                  <cn>1</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAlpha -->
      <method access="public" name="getAlpha">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAlpha -->
      <method access="public" name="getAlpha" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAlphaRaster -->
      <method access="public" name="getAlphaRaster" valid="no">
        <signature>
          <arg nr="1">
            <object>java.awt.image.WritableRaster</object>
          </arg>
          <return>
            <object>java.awt.image.WritableRaster</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getBlue -->
      <method access="public" name="getBlue">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <apply>
                  <leq/>
                  <return/>
                  <cn>255</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getBlue -->
      <method access="public" name="getBlue">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <apply>
                  <leq/>
                  <return/>
                  <cn>255</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getComponents -->
      <method access="public" name="getComponents" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getComponents -->
      <method access="public" name="getComponents" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataElement -->
      <method access="public" name="getDataElement" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataElement -->
      <method access="public" name="getDataElement" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <float/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataElements -->
      <method access="public" name="getDataElements">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataElements -->
      <method access="public" name="getDataElements">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.IndexOutOfBoundsException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataElements -->
      <method access="public" name="getDataElements">
        <signature>
          <arg nr="1">
            <array>
              <float/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.IndexOutOfBoundsException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getGreen -->
      <method access="public" name="getGreen">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <apply>
                  <leq/>
                  <return/>
                  <cn>255</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getGreen -->
      <method access="public" name="getGreen">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <apply>
                  <leq/>
                  <return/>
                  <cn>255</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getNormalizedComponents -->
      <method access="public" name="getNormalizedComponents">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <float/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <return>
            <array>
              <float/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="3"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getNormalizedComponents -->
      <method access="public" name="getNormalizedComponents">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <array>
              <float/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <array>
              <float/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="2"/>
            </transfer>
          </taint>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="2"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRGB -->
      <method access="public" name="getRGB">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRGB -->
      <method access="public" name="getRGB">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRed -->
      <method access="public" name="getRed">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <apply>
                  <leq/>
                  <return/>
                  <cn>255</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRed -->
      <method access="public" name="getRed">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
          <throws>java.lang.UnsupportedOperationException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
            <post>
              <math>
                <apply>
                  <leq/>
                  <return/>
                  <cn>255</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUnnormalizedComponents -->
      <method access="public" name="getUnnormalizedComponents">
        <signature>
          <arg nr="1">
            <array>
              <float/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.ArrayIndexOutOfBoundsException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="3"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isCompatibleRaster -->
      <method access="public" name="isCompatibleRaster" valid="no">
        <signature>
          <arg nr="1">
            <object>java.awt.image.Raster</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isCompatibleSampleModel -->
      <method access="public" name="isCompatibleSampleModel" valid="no">
        <signature>
          <arg nr="1">
            <object>java.awt.image.SampleModel</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getColorSpace -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getColorSpace">
        <signature>
          <return>
            <object>java.awt.color.ColorSpace</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getComponentSize -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getComponentSize">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getComponentSize -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getComponentSize">
        <signature>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getNumColorComponents -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getNumColorComponents">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getNumComponents -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getNumComponents">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getPixelSize -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getPixelSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getRGBdefault -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getRGBdefault">
        <signature>
          <return>
            <object>java.awt.image.ColorModel</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getTransferType -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getTransferType">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getTransparency -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="getTransparency">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hasAlpha -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="hasAlpha">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) isAlphaPremultiplied -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="isAlphaPremultiplied">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.awt.image.ColorModel" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
