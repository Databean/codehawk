<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-19 16:41:43"/>
  <class name="AudioSystem" package="javax.sound.sampled">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:NOT_SPECIFIED -->
      <field access="public" final="yes" name="NOT_SPECIFIED" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="-1"/>
        </value>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioFileFormat -->
      <method access="public" name="getAudioFileFormat" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioFileFormat</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.UnsupportedAudioFileException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioFileFormat -->
      <method access="public" name="getAudioFileFormat" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.URL</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioFileFormat</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.UnsupportedAudioFileException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioFileFormat -->
      <method access="public" name="getAudioFileFormat" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.File</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioFileFormat</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.UnsupportedAudioFileException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioFileTypes -->
      <method access="public" name="getAudioFileTypes" static="yes" valid="no">
        <signature>
          <return>
            <array>
              <object>javax.sound.sampled.AudioFileFormat$Type</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioFileTypes -->
      <method access="public" name="getAudioFileTypes" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioInputStream</object>
          </arg>
          <return>
            <array>
              <object>javax.sound.sampled.AudioFileFormat$Type</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioInputStream -->
      <method access="public" name="getAudioInputStream" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat$Encoding</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioInputStream</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioInputStream -->
      <method access="public" name="getAudioInputStream" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioInputStream</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioInputStream -->
      <method access="public" name="getAudioInputStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioInputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.UnsupportedAudioFileException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioInputStream -->
      <method access="public" name="getAudioInputStream" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.net.URL</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioInputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.UnsupportedAudioFileException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAudioInputStream -->
      <method access="public" name="getAudioInputStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.File</object>
          </arg>
          <return>
            <object>javax.sound.sampled.AudioInputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.UnsupportedAudioFileException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getClip -->
      <method access="public" name="getClip" static="yes" valid="no">
        <signature>
          <return>
            <object>javax.sound.sampled.Clip</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getClip -->
      <method access="public" name="getClip" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.Mixer$Info</object>
          </arg>
          <return>
            <object>javax.sound.sampled.Clip</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLine -->
      <method access="public" name="getLine" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.Line$Info</object>
          </arg>
          <return>
            <object>javax.sound.sampled.Line</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMixer -->
      <method access="public" name="getMixer" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.Mixer$Info</object>
          </arg>
          <return>
            <object>javax.sound.sampled.Mixer</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMixerInfo -->
      <method access="public" name="getMixerInfo" static="yes" valid="no">
        <signature>
          <return>
            <array>
              <object>javax.sound.sampled.Mixer$Info</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSourceDataLine -->
      <method access="public" name="getSourceDataLine" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <return>
            <object>javax.sound.sampled.SourceDataLine</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSourceDataLine -->
      <method access="public" name="getSourceDataLine" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.Mixer$Info</object>
          </arg>
          <return>
            <object>javax.sound.sampled.SourceDataLine</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSourceLineInfo -->
      <method access="public" name="getSourceLineInfo" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.Line$Info</object>
          </arg>
          <return>
            <array>
              <object>javax.sound.sampled.Line$Info</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTargetDataLine -->
      <method access="public" name="getTargetDataLine" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <return>
            <object>javax.sound.sampled.TargetDataLine</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTargetDataLine -->
      <method access="public" name="getTargetDataLine" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.Mixer$Info</object>
          </arg>
          <return>
            <object>javax.sound.sampled.TargetDataLine</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.sound.sampled.LineUnavailableException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTargetEncodings -->
      <method access="public" name="getTargetEncodings" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat$Encoding</object>
          </arg>
          <return>
            <array>
              <object>javax.sound.sampled.AudioFormat$Encoding</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTargetEncodings -->
      <method access="public" name="getTargetEncodings" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <return>
            <array>
              <object>javax.sound.sampled.AudioFormat$Encoding</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTargetFormats -->
      <method access="public" name="getTargetFormats" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat$Encoding</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <return>
            <array>
              <object>javax.sound.sampled.AudioFormat</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTargetLineInfo -->
      <method access="public" name="getTargetLineInfo" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.Line$Info</object>
          </arg>
          <return>
            <array>
              <object>javax.sound.sampled.Line$Info</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isConversionSupported -->
      <method access="public" name="isConversionSupported" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat$Encoding</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isConversionSupported -->
      <method access="public" name="isConversionSupported" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioFormat</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isFileTypeSupported -->
      <method access="public" name="isFileTypeSupported" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFileFormat$Type</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isFileTypeSupported -->
      <method access="public" name="isFileTypeSupported" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioFileFormat$Type</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioInputStream</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isLineSupported -->
      <method access="public" name="isLineSupported" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.Line$Info</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioInputStream</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioFileFormat$Type</object>
          </arg>
          <arg nr="3">
            <object>java.io.OutputStream</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.sound.sampled.AudioInputStream</object>
          </arg>
          <arg nr="2">
            <object>javax.sound.sampled.AudioFileFormat$Type</object>
          </arg>
          <arg nr="3">
            <object>java.io.File</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
