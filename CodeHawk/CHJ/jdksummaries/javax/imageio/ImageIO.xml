<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-15 23:23:35"/>
  <class final="yes" name="ImageIO" package="javax.imageio">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createImageInputStream -->
      <method access="public" name="createImageInputStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>javax.imageio.stream.ImageInputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createImageOutputStream -->
      <method access="public" name="createImageOutputStream" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>javax.imageio.stream.ImageOutputStream</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getCacheDirectory -->
      <method access="public" name="getCacheDirectory" static="yes">
        <signature>
          <return>
            <object>java.io.File</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageReader -->
      <method access="public" name="getImageReader" static="yes">
        <signature>
          <arg nr="1">
            <object>javax.imageio.ImageWriter</object>
          </arg>
          <return>
            <object>javax.imageio.ImageReader</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageReaders -->
      <method access="public" name="getImageReaders" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageReadersByFormatName -->
      <method access="public" name="getImageReadersByFormatName" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="image reader" form="image format name" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageReadersByMIMEType -->
      <method access="public" name="getImageReadersByMIMEType" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="image reader" form="image mime type" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageReadersBySuffix -->
      <method access="public" name="getImageReadersBySuffix" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="image reader" form="image file suffix" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageTranscoders -->
      <method access="public" name="getImageTranscoders" static="yes">
        <signature>
          <arg nr="1">
            <object>javax.imageio.ImageReader</object>
          </arg>
          <arg nr="2">
            <object>javax.imageio.ImageWriter</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageWriter -->
      <method access="public" name="getImageWriter" static="yes">
        <signature>
          <arg nr="1">
            <object>javax.imageio.ImageReader</object>
          </arg>
          <return>
            <object>javax.imageio.ImageWriter</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageWriters -->
      <method access="public" name="getImageWriters" static="yes">
        <signature>
          <arg nr="1">
            <object>javax.imageio.ImageTypeSpecifier</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageWritersByFormatName -->
      <method access="public" name="getImageWritersByFormatName" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="image writer" form="image format name" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageWritersByMIMEType -->
      <method access="public" name="getImageWritersByMIMEType" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="image writer" form="image mime type" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImageWritersBySuffix -->
      <method access="public" name="getImageWritersBySuffix" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="image writer" form="image file suffix" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getReaderFileSuffixes -->
      <method access="public" name="getReaderFileSuffixes" static="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.String</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getReaderFormatNames -->
      <method access="public" name="getReaderFormatNames" static="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.String</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getReaderMIMETypes -->
      <method access="public" name="getReaderMIMETypes" static="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.String</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUseCache -->
      <method access="public" name="getUseCache" static="yes">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getWriterFileSuffixes -->
      <method access="public" name="getWriterFileSuffixes" static="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.String</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getWriterFormatNames -->
      <method access="public" name="getWriterFormatNames" static="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.String</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getWriterMIMETypes -->
      <method access="public" name="getWriterMIMETypes" static="yes">
        <signature>
          <return>
            <array>
              <object>java.lang.String</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ read -->
      <method access="public" name="read" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.File</object>
          </arg>
          <return>
            <object>java.awt.image.BufferedImage</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ read -->
      <method access="public" name="read" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>java.awt.image.BufferedImage</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ read -->
      <method access="public" name="read" static="yes">
        <signature>
          <arg nr="1">
            <object>java.net.URL</object>
          </arg>
          <return>
            <object>java.awt.image.BufferedImage</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ read -->
      <method access="public" name="read" static="yes">
        <signature>
          <arg nr="1">
            <object>javax.imageio.stream.ImageInputStream</object>
          </arg>
          <return>
            <object>java.awt.image.BufferedImage</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <not-null/>
                  <arg nr="1"/>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary>
          <taint>
            <defput>
              <return/>
            </defput>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
            <error-post>
              <math>
                <null/>
              </math>
            </error-post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ scanForPlugins -->
      <method access="public" name="scanForPlugins" static="yes">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setCacheDirectory -->
      <method access="public" name="setCacheDirectory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.File</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.lang.SecurityException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setUseCache -->
      <method access="public" name="setUseCache" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes">
        <signature>
          <arg nr="1">
            <object>java.awt.image.RenderedImage</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>javax.imageio.stream.ImageOutputStream</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="3"/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="2" dest="write image" form="format name" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes">
        <signature>
          <arg nr="1">
            <object>java.awt.image.RenderedImage</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.io.File</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="3"/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="2" dest="write image" form="format name" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write" static="yes">
        <signature>
          <arg nr="1">
            <object>java.awt.image.RenderedImage</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.io.OutputStream</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <arg nr="3"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="3"/>
            </transfer>
          </taint>
          <sinks>
            <sink arg="2" dest="write image" form="format name" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
