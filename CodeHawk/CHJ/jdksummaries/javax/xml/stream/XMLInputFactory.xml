<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-05-25 11:34:02"/>
  <class abstract="yes" name="XMLInputFactory" package="javax.xml.stream">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:IS_NAMESPACE_AWARE -->
      <field access="public" final="yes" name="IS_NAMESPACE_AWARE" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.isNamespaceAware"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:IS_VALIDATING -->
      <field access="public" final="yes" name="IS_VALIDATING" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.isValidating"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:IS_COALESCING -->
      <field access="public" final="yes" name="IS_COALESCING" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.isCoalescing"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:IS_REPLACING_ENTITY_REFERENCES -->
      <field access="public" final="yes" name="IS_REPLACING_ENTITY_REFERENCES" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.isReplacingEntityReferences"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:IS_SUPPORTING_EXTERNAL_ENTITIES -->
      <field access="public" final="yes" name="IS_SUPPORTING_EXTERNAL_ENTITIES" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.isSupportingExternalEntities"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:SUPPORT_DTD -->
      <field access="public" final="yes" name="SUPPORT_DTD" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.supportDTD"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:REPORTER -->
      <field access="public" final="yes" name="REPORTER" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.reporter"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:RESOLVER -->
      <field access="public" final="yes" name="RESOLVER" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.resolver"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:ALLOCATOR -->
      <field access="public" final="yes" name="ALLOCATOR" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="javax.xml.stream.allocator"/>
        </value>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="protected">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createFilteredReader -->
      <method abstract="yes" access="public" name="createFilteredReader" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.stream.XMLStreamReader</object>
          </arg>
          <arg nr="2">
            <object>javax.xml.stream.StreamFilter</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createFilteredReader -->
      <method abstract="yes" access="public" name="createFilteredReader" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.stream.XMLEventReader</object>
          </arg>
          <arg nr="2">
            <object>javax.xml.stream.EventFilter</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.Reader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.io.Reader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.stream.XMLStreamReader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.transform.Source</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLEventReader -->
      <method abstract="yes" access="public" name="createXMLEventReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLEventReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLStreamReader -->
      <method abstract="yes" access="public" name="createXMLStreamReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.Reader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLStreamReader -->
      <method abstract="yes" access="public" name="createXMLStreamReader" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.transform.Source</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLStreamReader -->
      <method abstract="yes" access="public" name="createXMLStreamReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLStreamReader -->
      <method abstract="yes" access="public" name="createXMLStreamReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLStreamReader -->
      <method abstract="yes" access="public" name="createXMLStreamReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createXMLStreamReader -->
      <method abstract="yes" access="public" name="createXMLStreamReader" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.io.Reader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLStreamReader</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.XMLStreamException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getEventAllocator -->
      <method abstract="yes" access="public" name="getEventAllocator" valid="no">
        <signature>
          <return>
            <object>javax.xml.stream.util.XMLEventAllocator</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getProperty -->
      <method abstract="yes" access="public" name="getProperty" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getXMLReporter -->
      <method abstract="yes" access="public" name="getXMLReporter" valid="no">
        <signature>
          <return>
            <object>javax.xml.stream.XMLReporter</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getXMLResolver -->
      <method abstract="yes" access="public" name="getXMLResolver" valid="no">
        <signature>
          <return>
            <object>javax.xml.stream.XMLResolver</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isPropertySupported -->
      <method abstract="yes" access="public" name="isPropertySupported" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newFactory -->
      <method access="public" name="newFactory" static="yes">
        <signature>
          <return>
            <object>javax.xml.stream.XMLInputFactory</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.FactoryConfigurationError</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newFactory -->
      <method access="public" name="newFactory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.lang.ClassLoader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLInputFactory</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.FactoryConfigurationError</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance" static="yes">
        <signature>
          <return>
            <object>javax.xml.stream.XMLInputFactory</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.FactoryConfigurationError</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.lang.ClassLoader</object>
          </arg>
          <return>
            <object>javax.xml.stream.XMLInputFactory</object>
          </return>
        </signature>
        <exceptions>
          <throws>javax.xml.stream.FactoryConfigurationError</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setEventAllocator -->
      <method abstract="yes" access="public" name="setEventAllocator" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.stream.util.XMLEventAllocator</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setProperty -->
      <method abstract="yes" access="public" name="setProperty" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setXMLReporter -->
      <method abstract="yes" access="public" name="setXMLReporter" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.stream.XMLReporter</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setXMLResolver -->
      <method abstract="yes" access="public" name="setXMLResolver" valid="no">
        <signature>
          <arg nr="1">
            <object>javax.xml.stream.XMLResolver</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
