<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-17 22:43:05"/>
  <class name="Cipher" package="javax.crypto">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:ENCRYPT_MODE -->
      <field access="public" final="yes" name="ENCRYPT_MODE" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="1"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:DECRYPT_MODE -->
      <field access="public" final="yes" name="DECRYPT_MODE" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="2"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:WRAP_MODE -->
      <field access="public" final="yes" name="WRAP_MODE" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="3"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:UNWRAP_MODE -->
      <field access="public" final="yes" name="UNWRAP_MODE" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="4"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PUBLIC_KEY -->
      <field access="public" final="yes" name="PUBLIC_KEY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="1"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PRIVATE_KEY -->
      <field access="public" final="yes" name="PRIVATE_KEY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="2"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:SECRET_KEY -->
      <field access="public" final="yes" name="SECRET_KEY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="3"/>
        </value>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~ (javax.crypto.CipherSpi,java.security.Provider,java.lang.String) -->
      <constructor access="protected">
        <signature>
          <arg nr="1">
            <object>javax.crypto.CipherSpi</object>
          </arg>
          <arg nr="2">
            <object>java.security.Provider</object>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
          <throws>javax.crypto.ShortBufferException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="1"/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="1"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
          <throws>javax.crypto.AEADBadTagException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <not-null/>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.ShortBufferException</throws>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
          <throws>javax.crypto.AEADBadTagException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="4"/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="4"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
          <throws>javax.crypto.AEADBadTagException</throws>
          <throws>javax.crypto.ShortBufferException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="5"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="4"/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="4"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doFinal -->
      <method access="public" final="yes" name="doFinal">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <arg nr="2">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.ShortBufferException</throws>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>javax.crypto.BadPaddingException</throws>
          <throws>java.lang.IllegalStateException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="2"/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAlgorithm -->
      <method access="public" final="yes" name="getAlgorithm">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<not-null/>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getBlockSize -->
      <method access="public" final="yes" name="getBlockSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExemptionMechanism -->
      <method access="public" final="yes" name="getExemptionMechanism">
        <signature>
          <return>
            <object>javax.crypto.ExemptionMechanism</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getIV -->
      <method access="public" final="yes" name="getIV">
        <signature>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInstance -->
      <method access="public" final="yes" name="getInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>javax.crypto.Cipher</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
          <throws>javax.crypto.NoSuchPaddingException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInstance -->
      <method access="public" final="yes" name="getInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>javax.crypto.Cipher</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
          <throws>javax.crypto.NoSuchPaddingException</throws>
          <throws>java.security.NoSuchProviderException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInstance -->
      <method access="public" final="yes" name="getInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>java.security.Provider</object>
          </arg>
          <return>
            <object>javax.crypto.Cipher</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
          <throws>javax.crypto.NoSuchPaddingException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMaxAllowedKeyLength -->
      <method access="public" final="yes" name="getMaxAllowedKeyLength" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <sinks>
            <sink arg="1" dest="crypto" form="key transformation" type="string"/>
          </sinks>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMaxAllowedParameterSpec -->
      <method access="public" final="yes" name="getMaxAllowedParameterSpec" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.security.spec.AlgorithmParameterSpec</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.NoSuchAlgorithmException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getOutputSize -->
      <method access="public" final="yes" name="getOutputSize">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getParameters -->
      <method access="public" final="yes" name="getParameters">
        <signature>
          <return>
            <object>java.security.AlgorithmParameters</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getProvider -->
      <method access="public" final="yes" name="getProvider">
        <signature>
          <return>
            <object>java.security.Provider</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.Key</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
          <throws>java.security.InvalidAlgorithmParameterException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.Key</object>
          </arg>
          <arg nr="3">
            <object>java.security.SecureRandom</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.Key</object>
          </arg>
          <arg nr="3">
            <object>java.security.spec.AlgorithmParameterSpec</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
          <throws>java.security.InvalidAlgorithmParameterException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.Key</object>
          </arg>
          <arg nr="3">
            <object>java.security.spec.AlgorithmParameterSpec</object>
          </arg>
          <arg nr="4">
            <object>java.security.SecureRandom</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
          <throws>java.security.InvalidAlgorithmParameterException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.Key</object>
          </arg>
          <arg nr="3">
            <object>java.security.AlgorithmParameters</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidAlgorithmParameterException</throws>
          <throws>java.security.InvalidKeyException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.Key</object>
          </arg>
          <arg nr="3">
            <object>java.security.AlgorithmParameters</object>
          </arg>
          <arg nr="4">
            <object>java.security.SecureRandom</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidAlgorithmParameterException</throws>
          <throws>java.security.InvalidKeyException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="4"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.cert.Certificate</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ init -->
      <method access="public" final="yes" name="init">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.security.cert.Certificate</object>
          </arg>
          <arg nr="3">
            <object>java.security.SecureRandom</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unwrap -->
      <method access="public" final="yes" name="unwrap" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <object>java.security.Key</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.security.InvalidKeyException</throws>
          <throws>java.security.NoSuchAlgorithmException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ update -->
      <method access="public" final="yes" name="update">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ update -->
      <method access="public" final="yes" name="update">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ update -->
      <method access="public" final="yes" name="update">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalStateException</throws>
          <throws>javax.crypto.ShortBufferException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="4"/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="4"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ update -->
      <method access="public" final="yes" name="update">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.ShortBufferException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="3"/>
              <arg nr="4"/>
            </transfer>
            <transfer>
              <arg nr="5"/>
              <arg nr="4"/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <geq/>
                  <return/>
                  <cn>0</cn>
                </apply>
              </math>
            </post>
          </postconditions>
          <side-effects>
            <side-effect>
              <math>
                <apply>
                  <numeric-abstract/>
                  <arg nr="4"/>
                </apply>
              </math>
            </side-effect>
          </side-effects>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ update -->
      <method access="public" final="yes" name="update">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <arg nr="2">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.ShortBufferException</throws>
          <throws>java.lang.IllegalStateException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>java.nio.ReadOnlyBufferException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <arg nr="2"/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ updateAAD -->
      <method access="public" final="yes" name="updateAAD">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
        </signature>
        <exceptions>
	  <throws>java.lang.IllegalArgumentException</throws>
	  <throws>java.lang.IllegalStateException</throws>
	  <throws>java.lang.UnsupportedOperationException</throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ updateAAD -->
      <method access="public" final="yes" name="updateAAD">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
	  <throws>java.lang.IllegalArgumentException</throws>
	  <throws>java.lang.IllegalStateException</throws>
	  <throws>java.lang.UnsupportedOperationException</throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <this/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ updateAAD -->
      <method access="public" final="yes" name="updateAAD">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
        </signature>
        <exceptions>
	  <throws>java.lang.IllegalArgumentException</throws>
	  <throws>java.lang.IllegalStateException</throws>
	  <throws>java.lang.UnsupportedOperationException</throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ wrap -->
      <method access="public" final="yes" name="wrap" valid="no">
        <signature>
          <arg nr="1">
            <object>java.security.Key</object>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>javax.crypto.IllegalBlockSizeException</throws>
          <throws>java.security.InvalidKeyException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
